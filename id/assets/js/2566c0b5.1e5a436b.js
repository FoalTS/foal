"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1962],{92820:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=t(74848),d=t(28453);const s={title:"The Todo Model"},r=void 0,i={id:"tutorials/mongodb-todo-list/tuto-3-the-todo-model",title:"The Todo Model",description:"Let's create your first model. The CLI provides a useful command to generate a new file with an empty model.",source:"@site/versioned_docs/version-1.x/tutorials/mongodb-todo-list/tuto-3-the-todo-model.md",sourceDirName:"tutorials/mongodb-todo-list",slug:"/tutorials/mongodb-todo-list/tuto-3-the-todo-model",permalink:"/id/docs/1.x/tutorials/mongodb-todo-list/tuto-3-the-todo-model",draft:!1,unlisted:!1,editUrl:"https://github.com/FoalTS/foal/edit/master/docs/versioned_docs/version-1.x/tutorials/mongodb-todo-list/tuto-3-the-todo-model.md",tags:[],version:"1.x",frontMatter:{title:"The Todo Model"},sidebar:"someSidebar",previous:{title:"Introduction",permalink:"/id/docs/1.x/tutorials/mongodb-todo-list/tuto-2-introduction"},next:{title:"The Shell Script create-todo",permalink:"/id/docs/1.x/tutorials/mongodb-todo-list/tuto-4-the-shell-script-create-todo"}},l={},c=[];function a(e){const o={a:"a",blockquote:"blockquote",code:"code",em:"em",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.p,{children:"Let's create your first model. The CLI provides a useful command to generate a new file with an empty model."}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-sh",children:"foal generate model todo\n"})}),"\n",(0,n.jsxs)(o.blockquote,{children:["\n",(0,n.jsxs)(o.p,{children:["FoalTS uses ",(0,n.jsx)(o.a,{href:"http://mongoosejs.com",children:"Mongoose"}),", a complete ",(0,n.jsx)(o.em,{children:"Object-Document Mapper"}),", to communicate with the MongoDB database."]}),"\n"]}),"\n",(0,n.jsxs)(o.p,{children:["Open the file ",(0,n.jsx)(o.code,{children:"todo.model.ts"})," in the ",(0,n.jsx)(o.code,{children:"src/app/models"})," directory and add a ",(0,n.jsx)(o.code,{children:"text"})," field."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-typescript",children:"import { model, models, Schema } from 'mongoose';\n\nconst todoSchema = new Schema({\n  text: {\n    required: true,\n    type: String // String with a capital letter\n  }\n});\n\nexport const Todo = models.Todo || model('Todo', todoSchema);\n\n"})})]})}function m(e={}){const{wrapper:o}={...(0,d.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},28453:(e,o,t)=>{t.d(o,{R:()=>r,x:()=>i});var n=t(96540);const d={},s=n.createContext(d);function r(e){const o=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),n.createElement(s.Provider,{value:o},e.children)}}}]);