"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"3.x","banner":null,"badge":true,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"someSidebar":[{"type":"link","label":"Introduksi","href":"/id/docs/","docId":"README"},{"type":"category","label":"TUTORIAL","collapsed":false,"items":[{"type":"category","label":"To-Do List Sederhana","items":[{"type":"link","label":"Instalasi","href":"/id/docs/tutorials/simple-todo-list/1-installation","docId":"tutorials/simple-todo-list/tuto-1-installation"},{"type":"link","label":"Introduction","href":"/id/docs/tutorials/simple-todo-list/2-introduction","docId":"tutorials/simple-todo-list/tuto-2-introduction"},{"type":"link","label":"The Todo Model","href":"/id/docs/tutorials/simple-todo-list/3-the-todo-model","docId":"tutorials/simple-todo-list/tuto-3-the-todo-model"},{"type":"link","label":"The Shell Script create-todo","href":"/id/docs/tutorials/simple-todo-list/4-the-shell-script-create-todo","docId":"tutorials/simple-todo-list/tuto-4-the-shell-script-create-todo"},{"type":"link","label":"The REST API","href":"/id/docs/tutorials/simple-todo-list/5-the-rest-api","docId":"tutorials/simple-todo-list/tuto-5-the-rest-api"},{"type":"link","label":"Validation & Sanitization","href":"/id/docs/tutorials/simple-todo-list/6-validation-and-sanitization","docId":"tutorials/simple-todo-list/tuto-6-validation-and-sanitization"},{"type":"link","label":"Unit Testing","href":"/id/docs/tutorials/simple-todo-list/7-unit-testing","docId":"tutorials/simple-todo-list/tuto-7-unit-testing"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Full Example with React","items":[{"type":"link","label":"Introduction","href":"/id/docs/tutorials/real-world-example-with-react/1-introduction","docId":"tutorials/real-world-example-with-react/tuto-1-introduction"},{"type":"link","label":"Database Set Up","href":"/id/docs/tutorials/real-world-example-with-react/2-database-set-up","docId":"tutorials/real-world-example-with-react/tuto-2-database-set-up"},{"type":"link","label":"The User and Story Models","href":"/id/docs/tutorials/real-world-example-with-react/3-the-models","docId":"tutorials/real-world-example-with-react/tuto-3-the-models"},{"type":"link","label":"The Shell Scripts","href":"/id/docs/tutorials/real-world-example-with-react/4-the-shell-scripts","docId":"tutorials/real-world-example-with-react/tuto-4-the-shell-scripts"},{"type":"link","label":"Your First Route","href":"/id/docs/tutorials/real-world-example-with-react/5-our-first-route","docId":"tutorials/real-world-example-with-react/tuto-5-our-first-route"},{"type":"link","label":"API Testing with Swagger","href":"/id/docs/tutorials/real-world-example-with-react/6-swagger-interface","docId":"tutorials/real-world-example-with-react/tuto-6-swagger-interface"},{"type":"link","label":"The Frontend App","href":"/id/docs/tutorials/real-world-example-with-react/7-add-frontend","docId":"tutorials/real-world-example-with-react/tuto-7-add-frontend"},{"type":"link","label":"Logging Users In and Out","href":"/id/docs/tutorials/real-world-example-with-react/8-authentication","docId":"tutorials/real-world-example-with-react/tuto-8-authentication"},{"type":"link","label":"Authenticating Users in the API","href":"/id/docs/tutorials/real-world-example-with-react/9-authenticated-api","docId":"tutorials/real-world-example-with-react/tuto-9-authenticated-api"},{"type":"link","label":"Authenticating Users in React","href":"/id/docs/tutorials/real-world-example-with-react/10-auth-with-react","docId":"tutorials/real-world-example-with-react/tuto-10-auth-with-react"},{"type":"link","label":"Adding Sign Up","href":"/id/docs/tutorials/real-world-example-with-react/11-sign-up","docId":"tutorials/real-world-example-with-react/tuto-11-sign-up"},{"type":"link","label":"Image Upload and Download","href":"/id/docs/tutorials/real-world-example-with-react/12-file-upload","docId":"tutorials/real-world-example-with-react/tuto-12-file-upload"},{"type":"link","label":"CSRF Protection","href":"/id/docs/tutorials/real-world-example-with-react/13-csrf","docId":"tutorials/real-world-example-with-react/tuto-13-csrf"},{"type":"link","label":"Production Build","href":"/id/docs/tutorials/real-world-example-with-react/14-production-build","docId":"tutorials/real-world-example-with-react/tuto-14-production-build"},{"type":"link","label":"Social Auth with Google","href":"/id/docs/tutorials/real-world-example-with-react/15-social-auth","docId":"tutorials/real-world-example-with-react/tuto-15-social-auth"}],"collapsed":true,"collapsible":true}],"collapsible":true},{"type":"category","label":"TOPIK","collapsed":false,"items":[{"type":"category","label":"Arsitektur","items":[{"type":"link","label":"Architecture Overview","href":"/id/docs/architecture/architecture-overview","docId":"architecture/architecture-overview"},{"type":"link","label":"Controllers","href":"/id/docs/architecture/controllers","docId":"architecture/controllers"},{"type":"link","label":"Services & Dependency Injection","href":"/id/docs/architecture/services-and-dependency-injection","docId":"architecture/services-and-dependency-injection"},{"type":"link","label":"Hooks","href":"/id/docs/architecture/hooks","docId":"architecture/hooks"},{"type":"link","label":"Initialization","href":"/id/docs/architecture/initialization","docId":"architecture/initialization"},{"type":"link","label":"Error Handling","href":"/id/docs/architecture/error-handling","docId":"architecture/error-handling"},{"type":"link","label":"Configuration","href":"/id/docs/architecture/configuration","docId":"architecture/configuration"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Umum","items":[{"type":"link","label":"Validation","href":"/id/docs/common/validation-and-sanitization","docId":"common/validation-and-sanitization"},{"type":"category","label":"File Storage","items":[{"type":"link","label":"Local & Cloud Storage","href":"/id/docs/common/file-storage/local-and-cloud-storage","docId":"common/file-storage/local-and-cloud-storage"},{"type":"link","label":"Upload & Download Files","href":"/id/docs/common/file-storage/upload-and-download-files","docId":"common/file-storage/upload-and-download-files"}],"collapsed":true,"collapsible":true},{"type":"link","label":"Serialization","href":"/id/docs/common/serialization","docId":"common/serialization"},{"type":"link","label":"Logging","href":"/id/docs/common/logging","docId":"common/logging"},{"type":"link","label":"Task Scheduling","href":"/id/docs/common/task-scheduling","docId":"common/task-scheduling"},{"type":"link","label":"REST API","href":"/id/docs/common/rest-blueprints","docId":"common/rest-blueprints"},{"type":"link","label":"OpenAPI","href":"/id/docs/common/openapi-and-swagger-ui","docId":"common/openapi-and-swagger-ui"},{"type":"link","label":"GraphQL","href":"/id/docs/common/graphql","docId":"common/graphql"},{"type":"link","label":"WebSockets","href":"/id/docs/common/websockets","docId":"common/websockets"},{"type":"link","label":"gRPC","href":"/id/docs/common/gRPC","docId":"common/gRPC"},{"type":"link","label":"Utilities","href":"/id/docs/common/utilities","docId":"common/utilities"},{"type":"link","label":"ExpressJS","href":"/id/docs/common/expressjs","docId":"common/expressjs"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Database","items":[{"type":"link","label":"SQL Databases","href":"/id/docs/databases/typeorm","docId":"databases/typeorm"},{"type":"link","label":"Create Models & Queries","href":"/id/docs/databases/create-models-and-queries","docId":"databases/create-models-and-queries"},{"type":"link","label":"Migrations","href":"/id/docs/databases/generate-and-run-migrations","docId":"databases/generate-and-run-migrations"},{"type":"link","label":"NoSQL","href":"/id/docs/databases/mongodb","docId":"databases/mongodb"},{"type":"link","label":"Using Another ORM","href":"/id/docs/databases/using-another-orm","docId":"databases/using-another-orm"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Otentifikasi","items":[{"type":"link","label":"Quick Start","href":"/id/docs/authentication/quick-start","docId":"authentication/quick-start"},{"type":"link","label":"Users","href":"/id/docs/authentication/user-class","docId":"authentication/user-class"},{"type":"link","label":"Passwords","href":"/id/docs/authentication/password-management","docId":"authentication/password-management"},{"type":"link","label":"Session Tokens","href":"/id/docs/authentication/session-tokens","docId":"authentication/session-tokens"},{"type":"link","label":"JSON Web Tokens","href":"/id/docs/authentication/jwt","docId":"authentication/jwt"},{"type":"link","label":"Social Auth","href":"/id/docs/authentication/social-auth","docId":"authentication/social-auth"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Authorization","items":[{"type":"link","label":"Administrators & Roles","href":"/id/docs/authorization/administrators-and-roles","docId":"authorization/administrators-and-roles"},{"type":"link","label":"Groups & Permissions","href":"/id/docs/authorization/groups-and-permissions","docId":"authorization/groups-and-permissions"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Integrasi Frontend","items":[{"type":"link","label":"Single Page Applications","href":"/id/docs/frontend/single-page-applications","docId":"frontend/single-page-applications"},{"type":"link","label":"Angular, React & Vue","href":"/id/docs/frontend/angular-react-vue","docId":"frontend/angular-react-vue"},{"type":"link","label":"Server-Side Rendering","href":"/id/docs/frontend/server-side-rendering","docId":"frontend/server-side-rendering"},{"type":"link","label":"Nuxt","href":"/id/docs/frontend/nuxt.js","docId":"frontend/nuxt.js"},{"type":"link","label":"404 Page","href":"/id/docs/frontend/not-found-page","docId":"frontend/not-found-page"}],"collapsed":true,"collapsible":true},{"type":"category","label":"CLI","items":[{"type":"link","label":"Commands","href":"/id/docs/cli/commands","docId":"cli/commands"},{"type":"link","label":"Shell Scripts","href":"/id/docs/cli/shell-scripts","docId":"cli/shell-scripts"},{"type":"link","label":"Code Generation","href":"/id/docs/cli/code-generation","docId":"cli/code-generation"},{"type":"link","label":"Linting","href":"/id/docs/cli/linting-and-code-style","docId":"cli/linting-and-code-style"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Tes","items":[{"type":"link","label":"Introduction","href":"/id/docs/testing/introduction","docId":"testing/introduction"},{"type":"link","label":"Unit Testing","href":"/id/docs/testing/unit-testing","docId":"testing/unit-testing"},{"type":"link","label":"E2E Testing","href":"/id/docs/testing/e2e-testing","docId":"testing/e2e-testing"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Keamanan","items":[{"type":"link","label":"Response Headers","href":"/id/docs/security/http-headers-protection","docId":"security/http-headers-protection"},{"type":"link","label":"CSRF","href":"/id/docs/security/csrf-protection","docId":"security/csrf-protection"},{"type":"link","label":"CORS","href":"/id/docs/security/cors","docId":"security/cors"},{"type":"link","label":"Rate Limiting","href":"/id/docs/security/rate-limiting","docId":"security/rate-limiting"},{"type":"link","label":"Body Size Limiting","href":"/id/docs/security/body-size-limiting","docId":"security/body-size-limiting"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Deploy","items":[{"type":"link","label":"Checklist","href":"/id/docs/deployment-and-environments/checklist","docId":"deployment-and-environments/checklist"}],"collapsed":true,"collapsible":true}],"collapsible":true},{"type":"category","label":"Comparison with Other Frameworks","collapsed":false,"items":[{"type":"link","label":"Express / Fastify","href":"/id/docs/comparison-with-other-frameworks/express-fastify","docId":"comparison-with-other-frameworks/express-fastify"}],"collapsible":true},{"type":"category","label":"Upgrade","collapsed":false,"items":[{"type":"link","label":"To v3","href":"/id/docs/upgrade-to-v3/","docId":"upgrade-to-v3/README"},{"type":"link","label":"To v2","href":"https://foalts.org/docs/2.x/upgrade-to-v2/"},{"type":"link","label":"Ke v1","href":"https://github.com/FoalTS/foal/releases/tag/v1.0.0"}],"collapsible":true},{"type":"category","label":"Komunitas","collapsed":false,"items":[{"type":"link","label":"Awesome Foal","href":"/id/docs/community/awesome-foal","docId":"community/awesome-foal"}],"collapsible":true}]},"docs":{"architecture/architecture-overview":{"id":"architecture/architecture-overview","title":"Architecture Overview","description":"FoalTS is a framework for creating server-side Node.js applications. It is written in TypeScript, a typed superset of JavaScript that provides advanced development tools and the latest language features.","sidebar":"someSidebar"},"architecture/configuration":{"id":"architecture/configuration","title":"Configuration","description":"In FoalTS, configuration refers to any parameter that may vary between deploy environments (production, development, test, etc). It includes sensitive information, such as your database credentials, or simple settings, such as the server port.","sidebar":"someSidebar"},"architecture/controllers":{"id":"architecture/controllers","title":"Controllers","description":"Description","sidebar":"someSidebar"},"architecture/error-handling":{"id":"architecture/error-handling","title":"Error Handling","description":"When creating a new project with Foal, error handling is already configured for you. When an error is thrown or rejected in a controller or a hook, the application returns an HTML page Internal Server Error with the status code 500. If the configuration parameter settings.debug is set to true (which is the case during development or testing), the page includes some details about the error (name, message, stack trace, etc).","sidebar":"someSidebar"},"architecture/hooks":{"id":"architecture/hooks","title":"Hooks","description":"Description","sidebar":"someSidebar"},"architecture/initialization":{"id":"architecture/initialization","title":"Initialization","description":"In many situations, we need to initialize the application (i.e perform certain actions) before listening to incoming HTTP requests. This is the case, for example, if you need to establish a connection to the database.","sidebar":"someSidebar"},"architecture/services-and-dependency-injection":{"id":"architecture/services-and-dependency-injection","title":"Services & Dependency Injection","description":"Description","sidebar":"someSidebar"},"authentication/jwt":{"id":"authentication/jwt","title":"Authentication with JWT","description":"JSON Web Token (JWT) is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed. JWTs can be signed using a secret (with the HMAC algorithm) or a public/private key pair using RSA or ECDSA.","sidebar":"someSidebar"},"authentication/password-management":{"id":"authentication/password-management","title":"Password Management","description":"Passwords must never be stored in the database in plain text. If they were and attackers were to gain access to the database, all passwords would be compromised. To prevent this, they must be hashed and salted and their hashes stored. Foal provides two functions for this purpose.","sidebar":"someSidebar"},"authentication/quick-start":{"id":"authentication/quick-start","title":"Quick Start","description":"Authentication is the process of verifying that a user is who he or she claims to be. It answers the question Who is the user?.","sidebar":"someSidebar"},"authentication/session-tokens":{"id":"authentication/session-tokens","title":"Session Tokens","description":"Introduction","sidebar":"someSidebar"},"authentication/social-auth":{"id":"authentication/social-auth","title":"Social Authentication","description":"In addition to traditional password authentication, Foal provides services to authenticate users through social providers. The framework officially supports the following:","sidebar":"someSidebar"},"authentication/user-class":{"id":"authentication/user-class","title":"Users","description":"The User Entity","sidebar":"someSidebar"},"authorization/administrators-and-roles":{"id":"authorization/administrators-and-roles","title":"Administrators and Roles","description":"In simple applications, access control can be managed with static roles or even with an isAdmin column in the simplest cases.","sidebar":"someSidebar"},"authorization/groups-and-permissions":{"id":"authorization/groups-and-permissions","title":"Groups and Permissions","description":"In advanced applications, access control can be managed through permissions and groups.","sidebar":"someSidebar"},"cli/code-generation":{"id":"cli/code-generation","title":"Code Generation","description":"Create a project","sidebar":"someSidebar"},"cli/commands":{"id":"cli/commands","title":"Commands","description":"FoalTS provides several commands to help you build and develop your app.","sidebar":"someSidebar"},"cli/linting-and-code-style":{"id":"cli/linting-and-code-style","title":"Linting and Code Style","description":"A linter is a tool that analizes source code to flag programming errors, bugs, stylistic errors, and suspicious constructs. In particular, it helps teams to keep the code consistent between their members.","sidebar":"someSidebar"},"cli/shell-scripts":{"id":"cli/shell-scripts","title":"Shell Scripts","description":"Sometimes we have to execute some tasks from the command line. These tasks can serve different purposes such as populating a database (user creation, etc) for instance. They often need to access some of the app classes and functions. This is when shell scripts come into play.","sidebar":"someSidebar"},"common/expressjs":{"id":"common/expressjs","title":"ExpressJS","description":"FoalTS applications are created with the createApp function in the src/index.ts file. This function takes the root controller class (known as AppController) as parameter.","sidebar":"someSidebar"},"common/file-storage/local-and-cloud-storage":{"id":"common/file-storage/local-and-cloud-storage","title":"Local and Cloud Storage","description":"FoalTS provides its own file system for reading, writing and deleting files locally or in the Cloud. Thanks to its unified interface, you can easily choose different storage for each of your environments. This is especially useful when you\'re moving from development to production.","sidebar":"someSidebar"},"common/file-storage/upload-and-download-files":{"id":"common/file-storage/upload-and-download-files","title":"Upload and Download Files","description":"Files can be uploaded and downloaded using FoalTS file system. It allows you to use different types of file storage such as the local file system or cloud storage.","sidebar":"someSidebar"},"common/graphql":{"id":"common/graphql","title":"GraphQL","description":"GraphQL is a query language for APIs. Unlike traditional REST APIs, GraphQL APIs have only one endpoint to which requests are sent. The content of the request describes all the operations to be performed and the data to be returned in the response. Many resources can be retrieved in a single request and the client gets exactly the properties it asks for.","sidebar":"someSidebar"},"common/gRPC":{"id":"common/gRPC","title":"gRPC","description":"gRPC is a Remote Procedure Call (RPC) framework that can run in any environment. It can connect services in and across data centers with pluggable support for load balancing, tracing, health checking and authentication. It is also applicable in last mile of distributed computing to connect devices, mobile applications and browsers to backend services.","sidebar":"someSidebar"},"common/logging":{"id":"common/logging","title":"Logging","description":"HTTP Request Logging","sidebar":"someSidebar"},"common/openapi-and-swagger-ui":{"id":"common/openapi-and-swagger-ui","title":"OpenAPI & Swagger UI","description":"Introduction","sidebar":"someSidebar"},"common/rest-blueprints":{"id":"common/rest-blueprints","title":"REST API","description":"Example:","sidebar":"someSidebar"},"common/serialization":{"id":"common/serialization","title":"Serialization","description":"This document shows how to serialize class instances into plain objects and, conversely, how to deserialize plain objects into class instances. It is based on the class-transformer library.","sidebar":"someSidebar"},"common/task-scheduling":{"id":"common/task-scheduling","title":"Task Scheduling","description":"You can schedule jobs using shell scripts and the node-schedule library.","sidebar":"someSidebar"},"common/utilities":{"id":"common/utilities","title":"Utilities","description":"Random Tokens","sidebar":"someSidebar"},"common/validation-and-sanitization":{"id":"common/validation-and-sanitization","title":"Validation & Sanitization","description":"Validation checks if an input meets a set of criteria (such as the value of a property is a string).","sidebar":"someSidebar"},"common/websockets":{"id":"common/websockets","title":"Real-Time Communication","description":"Foal allows you to establish two-way interactive communication between your server(s) and your clients. For this, it uses the socket.io v4 library which is primarily based on the WebSocket protocol. It supports disconnection detection and automatic reconnection and works with proxies and load balancers.","sidebar":"someSidebar"},"community/awesome-foal":{"id":"community/awesome-foal","title":"Awesome Foal","description":"A collection of official and unofficial libraries and resources about Foal.","sidebar":"someSidebar"},"comparison-with-other-frameworks/express-fastify":{"id":"comparison-with-other-frameworks/express-fastify","title":"Foal vs Express or Fastify","description":"These pages are definitely the most difficult to write. If you are here, it is probably because you want to know if you should choose Foal over another framework. There are many in the Node ecosystem and choosing one is not always an easy task. These pages are meant to help you on your way.","sidebar":"someSidebar"},"databases/create-models-and-queries":{"id":"databases/create-models-and-queries","title":"Create Models & Queries","description":"Entities","sidebar":"someSidebar"},"databases/generate-and-run-migrations":{"id":"databases/generate-and-run-migrations","title":"Generate & Run Migrations","description":"Database migrations are a way of propagating changes you make to your entities into your database schema. The changes you make to your models (adding a field, deleting an entity, etc.) do not automatically modify your database. You have to do it yourself.","sidebar":"someSidebar"},"databases/mongodb":{"id":"databases/mongodb","title":"MongoDB (noSQL)","description":"Creating a new project","sidebar":"someSidebar"},"databases/typeorm":{"id":"databases/typeorm","title":"TypeORM","description":"A simple model:","sidebar":"someSidebar"},"databases/using-another-orm":{"id":"databases/using-another-orm","title":"Using Another ORM or Query Builder","description":"The core of the framework is independent of TypeORM. So, if you do not want to use an ORM at all or use another ORM or ODM than TypeORM, you absolutely can.","sidebar":"someSidebar"},"deployment-and-environments/checklist":{"id":"deployment-and-environments/checklist","title":"Deployment Checklist","description":"Set the Node.JS environment to production","sidebar":"someSidebar"},"frontend/angular-react-vue":{"id":"frontend/angular-react-vue","title":"Angular, React & Vue","description":"Angular, React and Vue all provide powerful CLIs for creating frontend applications. These tools are widely used, regularly improved and extensively documented. That\'s why Foal CLI do not provide ready-made features to build the frontend in their place.","sidebar":"someSidebar"},"frontend/not-found-page":{"id":"frontend/not-found-page","title":"404 Page","description":"Here\'s a way to implement custom 404 pages.","sidebar":"someSidebar"},"frontend/nuxt.js":{"id":"frontend/nuxt.js","title":"Nuxt","description":"Nuxt is a frontend framework based on Vue.JS.","sidebar":"someSidebar"},"frontend/server-side-rendering":{"id":"frontend/server-side-rendering","title":"Server-Side Rendering","description":"Regular Templates","sidebar":"someSidebar"},"frontend/single-page-applications":{"id":"frontend/single-page-applications","title":"Single Page Applications (SPA)","description":"Single-Page Applications are Web Applications that are loaded once upon the first request(s) to the backend. After retreiving all the necessary code from the server, the current page is rendered and updated directly in the browser without asking the server to render new pages. During its lifecycle, the application usually communicates with the server by making API calls to fetch, create, update or delete data. This is a common pattern used when creating a new application with Angular, React or Vue.","sidebar":"someSidebar"},"README":{"id":"README","title":"Introduksi","description":"License: MIT","sidebar":"someSidebar"},"security/body-size-limiting":{"id":"security/body-size-limiting","title":"Body Size Limiting","description":"By default, FoalTS only accepts request bodies lower than 100kb. This value can be increased by using the configuration key settings.bodyParser.limit. If a number is provided, then the value specifies the number of bytes. If it is a string, the value is passed to the bytes library for parsing.","sidebar":"someSidebar"},"security/cors":{"id":"security/cors","title":"CORS Requests","description":"Building a public API requires to allow Cross-Origin Request Sharing.","sidebar":"someSidebar"},"security/csrf-protection":{"id":"security/csrf-protection","title":"CSRF Protection","description":"Cross-Site Request Forgery (CSRF) is a type of attack that occurs when a malicious web site, email, blog, instant message, or program causes a user\u2019s web browser to perform an unwanted action on a trusted site when the user is authenticated.","sidebar":"someSidebar"},"security/http-headers-protection":{"id":"security/http-headers-protection","title":"Protection HTTP Headers","description":"To protect the application against some (!) common attacks, FoalTS sets by default various HTTP headers. These can be overrided in the HttpResponse objects.","sidebar":"someSidebar"},"security/rate-limiting":{"id":"security/rate-limiting","title":"Rate Limiting","description":"To avoid brute force attacks or overloading your application, you can set up a rate limiter to limit the number of requests a user can send to your application.","sidebar":"someSidebar"},"testing/e2e-testing":{"id":"testing/e2e-testing","title":"E2E Testing","description":"End-to-end tests are located in the src/e2e directory.","sidebar":"someSidebar"},"testing/introduction":{"id":"testing/introduction","title":"Introduction","description":"Every shipped app should come with a minimum set of tests. Writing tests lets you find problems early, facilitate changes and document your code. FoalTS is designed to be easily testable and provides the tools you need to write tests right away.","sidebar":"someSidebar"},"testing/unit-testing":{"id":"testing/unit-testing","title":"Unit Testing","description":"Convention","sidebar":"someSidebar"},"tutorials/real-world-example-with-react/tuto-1-introduction":{"id":"tutorials/real-world-example-with-react/tuto-1-introduction","title":"Introduction","description":"This tutorial shows how to build a real-world application with React and Foal. It assumes that you have already read the first guide How to build a Simple To-Do List and that you have a basic knowledge of React.","sidebar":"someSidebar"},"tutorials/real-world-example-with-react/tuto-10-auth-with-react":{"id":"tutorials/real-world-example-with-react/tuto-10-auth-with-react","title":"Authenticating Users in React","description":"The backend API is ready to be used. Now let\'s add authentication in the frontend side.","sidebar":"someSidebar"},"tutorials/real-world-example-with-react/tuto-11-sign-up":{"id":"tutorials/real-world-example-with-react/tuto-11-sign-up","title":"Adding Sign Up","description":"So far, only users created with the create-user script can log in and publish stories. In this section you will add a new API endpoint for users to sign up with the registration page.","sidebar":"someSidebar"},"tutorials/real-world-example-with-react/tuto-12-file-upload":{"id":"tutorials/real-world-example-with-react/tuto-12-file-upload","title":"Image Upload and Download","description":"The next step in this tutorial is to allow users to upload a profile picture. This image will be displayed on the homepage in front of each author\'s story.","sidebar":"someSidebar"},"tutorials/real-world-example-with-react/tuto-13-csrf":{"id":"tutorials/real-world-example-with-react/tuto-13-csrf","title":"CSRF Protection","description":"Since you use authentication with cookies, you need to add CSRF protection to your application.  This is really easy with Foal, even when building a SPA.","sidebar":"someSidebar"},"tutorials/real-world-example-with-react/tuto-14-production-build":{"id":"tutorials/real-world-example-with-react/tuto-14-production-build","title":"Production Build","description":"So far, the front-end and back-end applications are compiled and served by two different development servers. The next step is to build them into a single one ready for production.","sidebar":"someSidebar"},"tutorials/real-world-example-with-react/tuto-15-social-auth":{"id":"tutorials/real-world-example-with-react/tuto-15-social-auth","title":"Social Auth with Google","description":"In this last part of the tutorial, we will give users the ability to log in with Google. Currently, they can only log in with an email and a password.","sidebar":"someSidebar"},"tutorials/real-world-example-with-react/tuto-2-database-set-up":{"id":"tutorials/real-world-example-with-react/tuto-2-database-set-up","title":"Database Set Up","description":"The first step in this tutorial is to establish a database connection. If you haven\'t already done so, install MySQL or PostgreSQL.","sidebar":"someSidebar"},"tutorials/real-world-example-with-react/tuto-3-the-models":{"id":"tutorials/real-world-example-with-react/tuto-3-the-models","title":"The User and Story Models","description":"Now that the database connection is established, you can create your two entities User and Story.","sidebar":"someSidebar"},"tutorials/real-world-example-with-react/tuto-4-the-shell-scripts":{"id":"tutorials/real-world-example-with-react/tuto-4-the-shell-scripts","title":"The Shell Scripts","description":"Your models are ready to be used. As in the previous tutorial, you will use shell scripts to feed the database.","sidebar":"someSidebar"},"tutorials/real-world-example-with-react/tuto-5-our-first-route":{"id":"tutorials/real-world-example-with-react/tuto-5-our-first-route","title":"Your First Route","description":"The database is now filled with some stories. Let\'s implement the first route to retrieve them.","sidebar":"someSidebar"},"tutorials/real-world-example-with-react/tuto-6-swagger-interface":{"id":"tutorials/real-world-example-with-react/tuto-6-swagger-interface","title":"API Testing with Swagger","description":"Now that the first API endpoint has been implemented, the next step is to test it.","sidebar":"someSidebar"},"tutorials/real-world-example-with-react/tuto-7-add-frontend":{"id":"tutorials/real-world-example-with-react/tuto-7-add-frontend","title":"The Frontend App","description":"Very good, so far you have a first working version of your API. It\'s time to add the frontend.","sidebar":"someSidebar"},"tutorials/real-world-example-with-react/tuto-8-authentication":{"id":"tutorials/real-world-example-with-react/tuto-8-authentication","title":"Logging Users In and Out","description":"Stories are displayed on the home page. If we want users to be able to post new stories and upload a profile picture, we need to allow them to log in to the application.","sidebar":"someSidebar"},"tutorials/real-world-example-with-react/tuto-9-authenticated-api":{"id":"tutorials/real-world-example-with-react/tuto-9-authenticated-api","title":"Authenticating Users in the API","description":"Now that the login is configured, you can add two new routes to create and delete stories. Their access will be limited to authenticated users.","sidebar":"someSidebar"},"tutorials/simple-todo-list/installation-troubleshooting":{"id":"tutorials/simple-todo-list/installation-troubleshooting","title":"Installation Troubleshooting","description":"Errors with node-gyp"},"tutorials/simple-todo-list/tuto-1-installation":{"id":"tutorials/simple-todo-list/tuto-1-installation","title":"Instalasi","description":"Pada tutorial kali ini kita akan coba membuat aplikasi web dengan Foal. Aplikasinya berupa todo-list sederhana, di mana user bisa melakukan view, create dan delete catatan to-do mereka.","sidebar":"someSidebar"},"tutorials/simple-todo-list/tuto-2-introduction":{"id":"tutorials/simple-todo-list/tuto-2-introduction","title":"Introduction","description":"The application that you will create is a simple to-do list. It consists of a frontend part that has already been written for you and a backend part that will be the topic of this tutorial.","sidebar":"someSidebar"},"tutorials/simple-todo-list/tuto-3-the-todo-model":{"id":"tutorials/simple-todo-list/tuto-3-the-todo-model","title":"The Todo Model","description":"The next step is to take care of the database. By default, every new project in FoalTS is configured to use an SQLite database as it does not require any additional installation.","sidebar":"someSidebar"},"tutorials/simple-todo-list/tuto-4-the-shell-script-create-todo":{"id":"tutorials/simple-todo-list/tuto-4-the-shell-script-create-todo","title":"The Shell Script create-todo","description":"Now it is time to populate the database with some tasks.","sidebar":"someSidebar"},"tutorials/simple-todo-list/tuto-5-the-rest-api":{"id":"tutorials/simple-todo-list/tuto-5-the-rest-api","title":"The REST API","description":"Good, so far you have a frontend working properly and some todos in your database. Now it is time to code a REST API to link them both.","sidebar":"someSidebar"},"tutorials/simple-todo-list/tuto-6-validation-and-sanitization":{"id":"tutorials/simple-todo-list/tuto-6-validation-and-sanitization","title":"Validation & Sanitization","description":"Currently inputs received by the server are not checked. Everyone could send anything when requesting POST /api/todos. That\'s why client inputs cannot be trusted.","sidebar":"someSidebar"},"tutorials/simple-todo-list/tuto-7-unit-testing":{"id":"tutorials/simple-todo-list/tuto-7-unit-testing","title":"Unit Testing","description":"The last step of this tutorial is to add some unit tests to the ApiController.","sidebar":"someSidebar"},"upgrade-to-v3/README":{"id":"upgrade-to-v3/README","title":"Update Guide to Version 3","description":"This guide will take you step by step through the upgrade to version 3. If something is missing or incorrect, feel free to submit an issue or a PR on Github.","sidebar":"someSidebar"}}}')}}]);