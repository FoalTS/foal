"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8149],{3743:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var a=s(74848),t=s(28453);const i={title:"AWS Beanstalk"},o=void 0,r={id:"cloud/aws-beanstalk",title:"AWS Beanstalk",description:"This tutorial shows how to deploy an application with an SQL database to AWS Beanstalk. It assumes that you already have an AWS account and have access to your console.",source:"@site/versioned_docs/version-1.x/cloud/aws-beanstalk.md",sourceDirName:"cloud",slug:"/cloud/aws-beanstalk",permalink:"/id/docs/1.x/cloud/aws-beanstalk",draft:!1,unlisted:!1,editUrl:"https://github.com/FoalTS/foal/edit/master/docs/versioned_docs/version-1.x/cloud/aws-beanstalk.md",tags:[],version:"1.x",frontMatter:{title:"AWS Beanstalk"},sidebar:"someSidebar",previous:{title:"E2E Testing",permalink:"/id/docs/1.x/testing/e2e-testing"},next:{title:"Firebase",permalink:"/id/docs/1.x/cloud/firebase"}},c={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Do not use SQLite",id:"do-not-use-sqlite",level:3},{value:"Configure the Database Credentials",id:"configure-the-database-credentials",level:3},{value:"Sessions",id:"sessions",level:3},{value:"Case 1: The application does not use sessions",id:"case-1-the-application-does-not-use-sessions",level:4},{value:"Case 2: The application uses sessions",id:"case-2-the-application-uses-sessions",level:4},{value:"Create the AWS Application and Add a Database",id:"create-the-aws-application-and-add-a-database",level:2},{value:"Deploy the Foal Application",id:"deploy-the-foal-application",level:2},{value:"Generate &amp; Run the Database Migrations",id:"generate--run-the-database-migrations",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["This tutorial shows how to deploy an application with an SQL database to ",(0,a.jsx)(n.a,{href:"https://console.aws.amazon.com/elasticbeanstalk/home",children:"AWS Beanstalk"}),". It assumes that you already have an AWS account and have access to your console."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsx)(n.h3,{id:"do-not-use-sqlite",children:"Do not use SQLite"}),"\n",(0,a.jsx)(n.p,{children:"SQLite databases are not supported by AWS Beanstalk. You have to use a different one such as Postgres, MySQL, MariaDB, Oracle or MSSQL."}),"\n",(0,a.jsx)(n.p,{children:"Make sure that the SQLite driver is also uninstalled."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"npm uninstall sqlite3 connect-sqlite3\n"})}),"\n",(0,a.jsx)(n.h3,{id:"configure-the-database-credentials",children:"Configure the Database Credentials"}),"\n",(0,a.jsxs)(n.p,{children:["Replace your ",(0,a.jsx)(n.code,{children:"ormconfig.js"})," (or ",(0,a.jsx)(n.code,{children:"ormconfig.yml"})," or ",(0,a.jsx)(n.code,{children:"ormconfig.json"}),") file with this one:"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"ormconfig.js"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"const { Config } = require('@foal/core');\n\nmodule.exports = {\n  type: Config.get('database.type'),\n  url: Config.get('database.url'),\n  database: process.env.RDS_DB_NAME || Config.get('database.name'),\n  port: process.env.RDS_PORT || Config.get('database.port'),\n  host: process.env.RDS_HOSTNAME || Config.get('database.host'),\n  username: process.env.RDS_USERNAME || Config.get('database.username'),\n  password: process.env.RDS_PASSWORD || Config.get('database.password'),\n  entities: [\"build/app/**/*.entity.js\"],\n  migrations: [\"build/migrations/*.js\"],\n  cli: {\n    \"migrationsDir\": \"src/migrations\"\n  },\n  synchronize: Config.get('database.synchronize')\n};\n\n"})}),"\n",(0,a.jsxs)(n.p,{children:["And complete your configuration file ",(0,a.jsx)(n.code,{children:"config/default.json"})," (or ",(0,a.jsx)(n.code,{children:"config/default.yml"}),") with your local database credentials:"]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["The below credentials are an example. If you want to use them, you need to install PostgreSQL on your local host, create a database named ",(0,a.jsx)(n.code,{children:"my-db"})," and install the postgres driver in your project (",(0,a.jsx)(n.code,{children:"npm install pg"}),"). But you are free to use another database with other credentials if you want to."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "settings": {\n    // ...\n  },\n  "database": {\n    "type": "postgres",\n    "name": "my-db",\n    "port": 5432,\n    "username": "postgres",\n    "synchronize": true\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"sessions",children:"Sessions"}),"\n",(0,a.jsx)(n.h4,{id:"case-1-the-application-does-not-use-sessions",children:"Case 1: The application does not use sessions"}),"\n",(0,a.jsxs)(n.p,{children:["If you do not use sessions, then remove the store import and the store option from the ",(0,a.jsx)(n.code,{children:"createApp"})," function in the ",(0,a.jsx)(n.code,{children:"src/index.ts"})," file."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import 'source-map-support/register';\n\n// std\nimport * as http from 'http';\n\n// 3p\nimport { Config, createApp } from '@foal/core';\n// The store import is removed.\nimport { createConnection } from 'typeorm';\n\n// App\nimport { AppController } from './app/app.controller';\n\nasync function main() {\n  await createConnection();\n\n  // The store option is removed.\n  const app = createApp(AppController);\n\n  const httpServer = http.createServer(app);\n  const port = Config.get('port', 3001);\n  httpServer.listen(port, () => {\n    console.log(`Listening on port ${port}...`);\n  });\n}\n\nmain();\n\n"})}),"\n",(0,a.jsx)(n.h4,{id:"case-2-the-application-uses-sessions",children:"Case 2: The application uses sessions"}),"\n",(0,a.jsxs)(n.p,{children:["If your application uses sessions, you need to provide a ",(0,a.jsx)(n.a,{href:"https://github.com/expressjs/session#compatible-session-stores",children:"session store"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Here is an example with ",(0,a.jsx)(n.a,{href:"https://www.npmjs.com/package/connect-redis",children:"connect-redis"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import 'source-map-support/register';\n\n// std\nimport * as http from 'http';\n\n// 3p\nimport { Config, createApp } from '@foal/core';\nimport * as redisStoreFactory from 'connect-redis';\nimport { createConnection } from 'typeorm';\n\n// App\nimport { AppController } from './app/app.controller';\n\nasync function main() {\n  await createConnection();\n\n  const app = createApp(AppController, {\n    store: session => new (redisStoreFactory(session))(/* options */)\n  });\n\n  const httpServer = http.createServer(app);\n  const port = Config.get('port', 3001);\n  httpServer.listen(port, () => {\n    console.log(`Listening on port ${port}...`);\n  });\n}\n\nmain();\n\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"This guide does not explain how to set up a redis database on AWS Beanstalk."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"create-the-aws-application-and-add-a-database",children:"Create the AWS Application and Add a Database"}),"\n",(0,a.jsxs)(n.p,{children:["Go to ",(0,a.jsx)(n.a,{href:"https://console.aws.amazon.com/elasticbeanstalk/home",children:"https://console.aws.amazon.com/elasticbeanstalk/home"})," and click on ",(0,a.jsx)(n.em,{children:"Get Started"}),"."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"AWS Beanstalk home page",src:s(39359).A+"",width:"2560",height:"972"})}),"\n",(0,a.jsxs)(n.p,{children:["Enter the name of your application, choose the ",(0,a.jsx)(n.em,{children:"Node.js"})," platform and select the ",(0,a.jsx)(n.em,{children:"Sample Application"}),"."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Create Application page",src:s(54084).A+"",width:"1684",height:"1304"})}),"\n",(0,a.jsxs)(n.p,{children:["AWS creates and loads the new application. ",(0,a.jsx)(n.strong,{children:"This takes a few minutes"}),". Then check that the application ",(0,a.jsx)(n.em,{children:"health"})," is ok and open the application."]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["If the health is incorrect, click on the ",(0,a.jsx)(n.em,{children:"Causes"})," button to see what happened."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Dashboard",src:s(17325).A+"",width:"2554",height:"1160"})}),"\n",(0,a.jsx)(n.p,{children:"The home page should look like this:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Sample Application",src:s(87346).A+"",width:"2552",height:"702"})}),"\n",(0,a.jsxs)(n.p,{children:["Now it is time to configure your environment and add a database. Click on the ",(0,a.jsx)(n.em,{children:"Configuration"})," button and set the environment variables ",(0,a.jsx)(n.code,{children:"NODE_ENV"})," and ",(0,a.jsx)(n.code,{children:"DATABASE_SYNCHRONIZE"}),"."]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"NODE_ENV"})," variable tells FoalTS to look at the production configuration (for example ",(0,a.jsx)(n.code,{children:"config/production.json"}),")."]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"DATABASE_SYNCHRONIZE"})," variable tells TypeORM not to update the database schema on every application launch (see section ",(0,a.jsx)(n.a,{href:"#Generate-&-Run-the-Database-Migrations",children:"Generate & Run the Database Migrations"})," below)."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Configuration Overview",src:s(8891).A+"",width:"2550",height:"844"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Software Configuration",src:s(11328).A+"",width:"2104",height:"610"})}),"\n",(0,a.jsx)(n.p,{children:"Then create a new database from the configuration page."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Configuration Overview",src:s(35529).A+"",width:"2106",height:"364"})}),"\n",(0,a.jsx)(n.p,{children:"Choose the database engine (postgres in this example) and enter the production database credentials."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Database Page",src:s(96126).A+"",width:"2228",height:"1296"})}),"\n",(0,a.jsx)(n.h2,{id:"deploy-the-foal-application",children:"Deploy the Foal Application"}),"\n",(0,a.jsx)(n.p,{children:"Build the app."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"npm run build:app\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Create an archive from the directories and files ",(0,a.jsx)(n.code,{children:"build/"}),", ",(0,a.jsx)(n.code,{children:"config/"}),", ",(0,a.jsx)(n.code,{children:"public/"}),", ",(0,a.jsx)(n.code,{children:"ormconfig.json"}),", ",(0,a.jsx)(n.code,{children:"package-lock.json"})," and ",(0,a.jsx)(n.code,{children:"package.json"}),"."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"File compression",src:s(71911).A+"",width:"706",height:"568"})}),"\n",(0,a.jsx)(n.p,{children:"Upload the archive to AWS."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.img,{alt:"Upload the archive",src:s(89615).A+"",width:"2534",height:"912"}),"\n",(0,a.jsx)(n.img,{alt:"Upload the archive",src:s(4518).A+"",width:"2550",height:"516"})]}),"\n",(0,a.jsx)(n.p,{children:"The application restarts. This may take a few minutes."}),"\n",(0,a.jsx)(n.h2,{id:"generate--run-the-database-migrations",children:"Generate & Run the Database Migrations"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Warning, warning: this section is only compatible with projects created with FoalTS v0.8. If you need a tutorial for v1 and above, feel free to open a Github issue for that."})}),"\n",(0,a.jsxs)(n.p,{children:["Migrations are SQL queries that modify the database schemas (definition of the tables, relations, etc). By default, every new Foal project is created with the option ",(0,a.jsx)(n.code,{children:"synchronize: true"})," in its ",(0,a.jsx)(n.code,{children:"ormconfig"}),". This setting updates the database schema on every launch of the application."]}),"\n",(0,a.jsx)(n.p,{children:"But using this in production is considered unsafe (data could be lost for example if a model is changed by mistake). That's why we will generate and run migrations manually. To do this, we will need access to the database."}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Warning"})," This section assumes that you have previously set the environment variable ",(0,a.jsx)(n.code,{children:"DATABASE_SYNCHRONIZE"})," to ",(0,a.jsx)(n.code,{children:"false"}),". This overrides the ",(0,a.jsx)(n.code,{children:"synchronize"})," setting on AWS."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Go to ",(0,a.jsx)(n.a,{href:"https://console.aws.amazon.com/rds/home#databases:",children:"AWS database page"})," and click on your database."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"AWS database page",src:s(88285).A+"",width:"2542",height:"838"})}),"\n",(0,a.jsx)(n.p,{children:"Save the URL endpoint and click on the VPC security group. We will tell AWS that we can access the database from our local host."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"AWS database page",src:s(67156).A+"",width:"2518",height:"996"})}),"\n",(0,a.jsxs)(n.p,{children:["Add a new ",(0,a.jsx)(n.em,{children:"inbound"})," rule. ",(0,a.jsx)(n.strong,{children:"Make sure you don't delete the one that already exists."})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"VPC security group",src:s(42795).A+"",width:"2552",height:"750"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"VPC security group (rules)",src:s(79138).A+"",width:"1828",height:"586"})}),"\n",(0,a.jsx)(n.p,{children:"You are now able to communicate from your local host with the production database  (as long as you provide the correct credentials)."}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["The next part of the tutorial assumes that you did not change the default option ",(0,a.jsx)(n.code,{children:"synchronize: true"})," in the ",(0,a.jsx)(n.code,{children:"ormconfig"})," file. This is probably the case if you have never had to deal with migrations before."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Open ",(0,a.jsx)(n.strong,{children:"a new terminal/console"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Enter the database credentials."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"On Mac and Linux"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"export DATABASE_HOST=<the previous saved endpoint>\nexport DATABASE_USERNAME=<the database username> # in the tutorial, it is myusername\nexport DATABASE_PASSWORD=<the database password>\nexport DATABASE_NAME=ebdb\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"On Windows"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"set DATABASE_HOST=<the previous saved endpoint>\nset DATABASE_USERNAME=<the database username> # in the tutorial, it is myusername\nset DATABASE_PASSWORD=<the database password>\nset DATABASE_NAME=ebdb\n"})}),"\n",(0,a.jsx)(n.p,{children:"Generate the migration."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"npm run migration:generate -- --name first-migration\n"})}),"\n",(0,a.jsxs)(n.p,{children:["A new migration file appears in ",(0,a.jsx)(n.code,{children:"src/migrations/"}),". Check that it is correct and then build it."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"npm run build:migrations\n"})}),"\n",(0,a.jsx)(n.p,{children:"Then run the migration."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"npm run migration:run\n"})}),"\n",(0,a.jsx)(n.p,{children:"The database schema is updated. Your remote application should now run properly."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Close your terminal / console"}),". Do not start your local application in the same terminal, otherwise it will run on your production database."]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Caution:"})," Running migrations is always sensitive part of deployments. You should always back up your data before doing such a thing."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},39359:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/aws1-8e36cc54e3a8df70b6939fddc5fe69e9.png"},89615:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/aws10-6d51005ac43c407895543aa92fb37693.png"},4518:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/aws11-77640fb0eb9bd0abf66bb1f1e684ab66.png"},88285:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/aws12-3fbd62cda7c19292f9d61c058e534ab6.png"},67156:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/aws13-13929466f6a103691a81caab58042245.png"},42795:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/aws14-55cbcfd32f00835479e6430ea6fbce28.png"},79138:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/aws15-2016e4a621bad8bdcc1cb107774af1ff.png"},54084:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/aws2-a2aeaf3fa13eb427c83b25fbd5f0fd89.png"},17325:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/aws3-4f4fa51399f283d768c7a71dad4e1dfd.png"},87346:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/aws4-205d0160bf165339eb387b54c8343b6e.png"},8891:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/aws5-cd92a1a826d5aee626c37f75d400d43a.png"},11328:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/aws6-71487d0874c8bcd18cf5cd0a75d8b0d0.png"},35529:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/aws7-b8d41622926735f0fcc236f1c431be95.png"},96126:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/aws8-a89cc1acd85d857a6869c097dc354e04.png"},71911:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/aws9-4b34c54819c88c385469c69cdfabf2af.png"},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var a=s(96540);const t={},i=a.createContext(t);function o(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);