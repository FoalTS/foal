"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6230],{93039:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=n(74848),s=n(28453);const o={title:"Authenticating Users in the API",id:"tuto-9-authenticated-api",slug:"9-authenticated-api"},i=void 0,a={id:"tutorials/real-world-example-with-react/tuto-9-authenticated-api",title:"Authenticating Users in the API",description:"Now that the login is configured, you can add two new routes to create and delete stories. Their access will be limited to authenticated users.",source:"@site/i18n/id/docusaurus-plugin-content-docs/current/tutorials/real-world-example-with-react/9-authenticated-api.md",sourceDirName:"tutorials/real-world-example-with-react",slug:"/tutorials/real-world-example-with-react/9-authenticated-api",permalink:"/id/docs/tutorials/real-world-example-with-react/9-authenticated-api",draft:!1,unlisted:!1,editUrl:"https://github.com/FoalTS/foal/edit/master/docs/docs/tutorials/real-world-example-with-react/9-authenticated-api.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"Authenticating Users in the API",id:"tuto-9-authenticated-api",slug:"9-authenticated-api"},sidebar:"someSidebar",previous:{title:"Logging Users In and Out",permalink:"/id/docs/tutorials/real-world-example-with-react/8-authentication"},next:{title:"Authenticating Users in React",permalink:"/id/docs/tutorials/real-world-example-with-react/10-auth-with-react"}},d={},c=[];function l(t){const e={a:"a",code:"code",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.p,{children:"Now that the login is configured, you can add two new routes to create and delete stories. Their access will be limited to authenticated users."}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"API endpoint"}),(0,r.jsx)(e.th,{children:"Method"}),(0,r.jsx)(e.th,{children:"Description"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"/api/stories"})}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"POST"})}),(0,r.jsx)(e.td,{children:"Creates a new story."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"/api/stories/:storyId"})}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"DELETE"})}),(0,r.jsx)(e.td,{children:"Deletes a story."})]})]})]}),"\n",(0,r.jsxs)(e.p,{children:["Open the ",(0,r.jsx)(e.code,{children:"stories.controller.ts"})," file and add two new methods to the controller."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"import { Context, Delete, Get, HttpResponseCreated, HttpResponseNoContent, HttpResponseNotFound, HttpResponseOK, Post, UserRequired, ValidateBody, ValidatePathParam, ValidateQueryParam } from '@foal/core';\nimport { Story, User } from '../../entities';\n\nexport class StoriesController {\n\n  // readStories...\n\n  @Post()\n  @ValidateBody({\n    type: 'object',\n    properties: {\n      title: { type: 'string', maxLength: 255 },\n      link: { type: 'string', maxLength: 255 },\n    },\n    required: [ 'title', 'link' ],\n    additionalProperties: false,\n  })\n  @UserRequired()\n  async createStory(ctx: Context<User>) {\n    const story = new Story();\n    story.title = ctx.request.body.title;\n    story.link = ctx.request.body.link;\n    // Set the current user as the author of the story.\n    story.author = ctx.user;\n    await story.save();\n\n    return new HttpResponseCreated();\n  }\n\n  @Delete('/:storyId')\n  @ValidatePathParam('storyId', { type: 'number' })\n  @UserRequired()\n  async deleteStory(ctx: Context<User>, { storyId }: { storyId: number }) {\n    // Only retrieve stories whose author is the current user.\n    const story = await Story.findOneBy({ id: storyId, author: { id: ctx.user.id } });\n\n    if (!story) {\n      return new HttpResponseNotFound();\n    }\n\n    await story.remove();\n\n    return new HttpResponseNoContent();\n  }\n\n}\n"})}),"\n",(0,r.jsxs)(e.p,{children:["When sending a request to these endpoints, the ",(0,r.jsx)(e.code,{children:"@UserRequired"})," hook will return a 401 error if ",(0,r.jsx)(e.code,{children:"ctx.user"})," is null (i.e. if the user has not logged in first). But if it is, the controller method will be executed."]}),"\n",(0,r.jsxs)(e.p,{children:["Go to ",(0,r.jsx)(e.a,{href:"http://localhost:3001/swagger",children:"http://localhost:3001/swagger"})," and check that the controller is working as expected. You can, for example, first try to create a story without being connected and then log in and try again."]})]})}function h(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(l,{...t})}):l(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>i,x:()=>a});var r=n(96540);const s={},o=r.createContext(s);function i(t){const e=r.useContext(o);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:i(t.components),r.createElement(o.Provider,{value:e},t.children)}}}]);