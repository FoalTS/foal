"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5031],{17658:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>l,contentTitle:()=>g,default:()=>d,frontMatter:()=>t,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"utilities/logging-and-debugging","title":"Logging & Debugging","description":"HTTP Request Logging","source":"@site/versioned_docs/version-1.x/utilities/logging-and-debugging.md","sourceDirName":"utilities","slug":"/utilities/logging-and-debugging","permalink":"/id/docs/1.x/utilities/logging-and-debugging","draft":false,"unlisted":false,"editUrl":"https://github.com/FoalTS/foal/edit/master/docs/versioned_docs/version-1.x/utilities/logging-and-debugging.md","tags":[],"version":"1.x","frontMatter":{"title":"Logging & Debugging"},"sidebar":"someSidebar","previous":{"title":"Templates (SSR)","permalink":"/id/docs/1.x/utilities/templating"},"next":{"title":"Error Handling","permalink":"/id/docs/1.x/cookbook/error-handling"}}');var s=o(74848),i=o(28453);const t={title:"Logging & Debugging"},g=void 0,l={},a=[{value:"HTTP Request Logging",id:"http-request-logging",level:2},{value:"Disabling HTTP Request Logging",id:"disabling-http-request-logging",level:2},{value:"Disabling Error Logging",id:"disabling-error-logging",level:2},{value:"Logging Hook",id:"logging-hook",level:2},{value:"Advanced Logging",id:"advanced-logging",level:2}];function c(n){const e={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{id:"http-request-logging",children:"HTTP Request Logging"}),"\n",(0,s.jsxs)(e.p,{children:["FoalTS uses ",(0,s.jsx)(e.a,{href:"https://www.npmjs.com/package/morgan",children:"morgan"})," to log the HTTP requests. You can specify the output format using the environment variable ",(0,s.jsx)(e.code,{children:"SETTINGS_LOGGER_FORMAT"})," or the ",(0,s.jsx)(e.code,{children:"config/default.json"})," file:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "settings": {\n    "loggerFormat": "tiny"\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"disabling-http-request-logging",children:"Disabling HTTP Request Logging"}),"\n",(0,s.jsxs)(e.p,{children:["In some scenarios and environments, you might want to disable http request logging. You can achieve this by setting the ",(0,s.jsx)(e.code,{children:"loggerFormat"})," configuration option to ",(0,s.jsx)(e.code,{children:"none"}),"."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'  {\n    "settings": {\n      "loggerFormat": "none",\n    }\n  }\n'})}),"\n",(0,s.jsx)(e.h2,{id:"disabling-error-logging",children:"Disabling Error Logging"}),"\n",(0,s.jsxs)(e.p,{children:["In some scenarios, you might want to disable error logging (error stack traces that are displayed when an error is thrown in a controller or hook). You can achieve this by setting the ",(0,s.jsx)(e.code,{children:"allErrors"})," configuration option to false."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'  {\n    "settings": {\n      "allErrors": false\n    }\n  }\n'})}),"\n",(0,s.jsx)(e.h2,{id:"logging-hook",children:"Logging Hook"}),"\n",(0,s.jsxs)(e.p,{children:["FoalTS provides a convenient hook for logging debug messages: ",(0,s.jsx)(e.code,{children:"Log(message: string, options: LogOptions = {})"}),"."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"interface LogOptions {\n  body?: boolean;\n  params?: boolean;\n  headers?: string[]|boolean;\n  query?: boolean;\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.em,{children:"Example:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"import { Get, HttpResponseOK, Log } from '@foal/core';\n\n@Log('AppController', {\n  body: true,\n  headers: [ 'X-CSRF-Token' ],\n  params: true,\n  query: true\n})\nexport class AppController {\n  @Get()\n  index() {\n    return new HttpResponseOK();\n  }\n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"advanced-logging",children:"Advanced Logging"}),"\n",(0,s.jsxs)(e.p,{children:["If you need advanced logging, you might be interested in using ",(0,s.jsx)(e.a,{href:"https://www.npmjs.com/package/winston",children:"winston"}),", a popular logger in the Node.js ecosystem."]}),"\n",(0,s.jsx)(e.p,{children:"Here's an example on how to use it with Foal:"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.em,{children:"LoggerService"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"import * as winston from 'winston';\n\nexport class LoggerService {\n  private logger: any;\n\n  constructor() {\n    this.logger = winston.createLogger({\n      transports: [\n        new winston.transports.Console(),\n        new winston.transports.File({\n          filename: 'logs.txt'\n        })\n      ]\n    });\n  }\n\n  info(msg: string) {\n    this.logger.info(msg);\n  }\n\n  warn(msg: string) {\n    this.logger.warn(msg);\n  }\n\n  error(msg: string) {\n    this.logger.error(msg);\n  }\n\n}\n\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.em,{children:"LogUserId hook"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"import { Hook } from '@foal/core';\n// LoggerService import.\n\nexport function LogUserId() {\n  return Hook((ctx, services) => {\n    const logger = services.get(LoggerService);\n    logger.info(`UserId is: ${ctx.user.id}`);\n  });\n}\n\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.em,{children:"ProductController"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"import { Get } from '@foal/core';\n// LogUserId import.\n\nexport class ProductController {\n\n  @Get('/')\n  @LogUserId()\n  readProducts() {\n    ...\n  }\n\n}\n\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.em,{children:"AuthController"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"import { dependency, Post } from '@foal/core';\n// LoggerService import.\n\nexport class AuthController {\n  @dependency\n  logger: LoggerService;\n\n  @Post('/signup')\n  signup() {\n    ...\n    this.logger.info('Someone signed up!');\n  }\n\n}\n\n"})})]})}function d(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}},28453:(n,e,o)=>{o.d(e,{R:()=>t,x:()=>g});var r=o(96540);const s={},i=r.createContext(s);function t(n){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function g(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:t(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);