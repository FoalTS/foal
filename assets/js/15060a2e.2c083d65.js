"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9401],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3870:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={title:"Create and Run Scripts",sidebar_label:"Create & Run Scripts"},i=void 0,s={unversionedId:"development-environment/create-and-run-scripts",id:"version-2.x/development-environment/create-and-run-scripts",title:"Create and Run Scripts",description:"Sometimes we have to execute some tasks from the command line. These tasks can serve different purposes such as populating a database (user creation, etc) for instance. They often need to access some of the app classes and functions. This is when shell scripts come into play.",source:"@site/versioned_docs/version-2.x/development-environment/create-and-run-scripts.md",sourceDirName:"development-environment",slug:"/development-environment/create-and-run-scripts",permalink:"/docs/2.x/development-environment/create-and-run-scripts",draft:!1,editUrl:"https://github.com/FoalTS/foal/edit/master/docs/versioned_docs/version-2.x/development-environment/create-and-run-scripts.md",tags:[],version:"2.x",frontMatter:{title:"Create and Run Scripts",sidebar_label:"Create & Run Scripts"},sidebar:"someSidebar",previous:{title:"Build & Start the App",permalink:"/docs/2.x/development-environment/build-and-start-the-app"},next:{title:"Code Generation",permalink:"/docs/2.x/development-environment/code-generation"}},c={},l=[{value:"Create Scripts",id:"create-scripts",level:2},{value:"Write Scripts",id:"write-scripts",level:2},{value:"Build and Run Scripts",id:"build-and-run-scripts",level:2}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Sometimes we have to execute some tasks from the command line. These tasks can serve different purposes such as populating a database (user creation, etc) for instance. They often need to access some of the app classes and functions. This is when shell scripts come into play."),(0,a.kt)("h2",{id:"create-scripts"},"Create Scripts"),(0,a.kt)("p",null,"A shell script is just a TypeScript file located in the ",(0,a.kt)("inlineCode",{parentName:"p"},"src/scripts"),". It must export a ",(0,a.kt)("inlineCode",{parentName:"p"},"main")," function that is then called when running the script."),(0,a.kt)("p",null,"Let's create a new one with the command line: ",(0,a.kt)("inlineCode",{parentName:"p"},"foal g script display-users"),". A new file with a default template should appear in you ",(0,a.kt)("inlineCode",{parentName:"p"},"src/scripts")," directory."),(0,a.kt)("h2",{id:"write-scripts"},"Write Scripts"),(0,a.kt)("p",null,"Remove the content of ",(0,a.kt)("inlineCode",{parentName:"p"},"src/scripts/display-users.ts")," and replace it with the below code."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"// 3p\nimport { createService } from '@foal/core';\nimport { createConnection } from 'typeorm';\n\n// App\nimport { User } from '../app/entities';\nimport { Logger } from '../app/services';\n\nexport async function main() {\n  const connection = await createConnection();\n  try {\n    const users = await connection.getRepository(User).find();\n    const logger = createService(Logger);\n    logger.log(users);\n  } finally {\n    connection.close();\n  }\n}\n\n")),(0,a.kt)("p",null,"As you can see, we can easily establish a connection to the database in the script as well as import some of the app components (the ",(0,a.kt)("inlineCode",{parentName:"p"},"User")," in this case)."),(0,a.kt)("p",null,"Encapsulating your code in a ",(0,a.kt)("inlineCode",{parentName:"p"},"main")," function without calling it directly in the file has several benefits:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You can import and test your ",(0,a.kt)("inlineCode",{parentName:"li"},"main")," function in a separate file."),(0,a.kt)("li",{parentName:"ul"},"Using a function lets you easily use async/await keywords when dealing with asynchronous code.")),(0,a.kt)("h2",{id:"build-and-run-scripts"},"Build and Run Scripts"),(0,a.kt)("p",null,"To run a script you first need to build it."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"npm run build\n")),(0,a.kt)("p",null,"Then you can execute it with this command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"foal run my-script # or foal run-script my-script\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"You can also provide additionnal arguments to your script (for example: ",(0,a.kt)("inlineCode",{parentName:"p"},"foal run my-script foo=1 bar='[ 3, 4 ]'"),"). The default template in the generated scripts shows you how to handle such behavior.")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"If you want your script to recompile each time you save the file, you can run ",(0,a.kt)("inlineCode",{parentName:"p"},"npm run develop")," in a separate terminal.")))}u.isMDXComponent=!0}}]);