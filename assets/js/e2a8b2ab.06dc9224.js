"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1408],{10732:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var r=n(74848),o=n(28453);const s={title:"The User and Story Models",id:"tuto-3-the-models",slug:"3-the-models"},a=void 0,i={id:"tutorials/real-world-example-with-react/tuto-3-the-models",title:"The User and Story Models",description:"Now that the database connection is established, you can create your two entities User and Story.",source:"@site/docs/tutorials/real-world-example-with-react/3-the-models.md",sourceDirName:"tutorials/real-world-example-with-react",slug:"/tutorials/real-world-example-with-react/3-the-models",permalink:"/docs/tutorials/real-world-example-with-react/3-the-models",draft:!1,unlisted:!1,editUrl:"https://github.com/FoalTS/foal/edit/master/docs/docs/tutorials/real-world-example-with-react/3-the-models.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"The User and Story Models",id:"tuto-3-the-models",slug:"3-the-models"},sidebar:"someSidebar",previous:{title:"Database Set Up",permalink:"/docs/tutorials/real-world-example-with-react/2-database-set-up"},next:{title:"The Shell Scripts",permalink:"/docs/tutorials/real-world-example-with-react/4-the-shell-scripts"}},l={},d=[{value:"The <code>User</code> Model",id:"the-user-model",level:2},{value:"The <code>Story</code> Model",id:"the-story-model",level:2},{value:"Run Migrations",id:"run-migrations",level:2}];function c(e){const t={blockquote:"blockquote",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Now that the database connection is established, you can create your two entities ",(0,r.jsx)(t.code,{children:"User"})," and ",(0,r.jsx)(t.code,{children:"Story"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"User"})," entity will be the model used by the framework to identify users and the ",(0,r.jsx)(t.code,{children:"Story"})," entity will represent the users' posts."]}),"\n",(0,r.jsxs)(t.h2,{id:"the-user-model",children:["The ",(0,r.jsx)(t.code,{children:"User"})," Model"]}),"\n",(0,r.jsxs)(t.p,{children:["Open the ",(0,r.jsx)(t.code,{children:"user.entity.ts"})," file from the ",(0,r.jsx)(t.code,{children:"entities"})," directory and add four new properties to your model: ",(0,r.jsx)(t.code,{children:"email"}),", ",(0,r.jsx)(t.code,{children:"password"}),", ",(0,r.jsx)(t.code,{children:"name"})," and ",(0,r.jsx)(t.code,{children:"avatar"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"avatar"})," column will contain the paths to the profile images."]}),"\n",(0,r.jsxs)(t.p,{children:["You will also need to export an additional model ",(0,r.jsx)(t.code,{children:"DatabaseSession"})," from the ",(0,r.jsx)(t.code,{children:"@foal/typeorm"})," package. You don't need to worry about it now, it will be used later in the tutorial when you add authentication."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import { BaseEntity, Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class User extends BaseEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ unique: true })\n  email: string;\n\n  @Column()\n  password: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  avatar: string;\n\n}\n\n// This line is required. It will be used to create the SQL session table later in the tutorial.\nexport { DatabaseSession } from '@foal/typeorm';\n"})}),"\n",(0,r.jsxs)(t.h2,{id:"the-story-model",children:["The ",(0,r.jsx)(t.code,{children:"Story"})," Model"]}),"\n",(0,r.jsx)(t.p,{children:"Then create your second entity."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"foal generate entity story\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Open the new file and add three new properties: ",(0,r.jsx)(t.code,{children:"author"}),", ",(0,r.jsx)(t.code,{children:"title"})," and ",(0,r.jsx)(t.code,{children:"link"}),"."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import { BaseEntity, Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { User } from './user.entity';\n\n@Entity()\nexport class Story extends BaseEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ManyToOne(type => User, { nullable: false })\n  author: User;\n\n  @Column()\n  title: string;\n\n  @Column()\n  link: string;\n\n}\n"})}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:["By default, TypeORM allows ",(0,r.jsx)(t.em,{children:"many-to-one"})," relationships to be nullable. The option passed to the decorator specifies that this one cannot be."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"run-migrations",children:"Run Migrations"}),"\n",(0,r.jsx)(t.p,{children:"Finally, create the tables in the database. Generate the migrations from the entities and run them."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npm run makemigrations\nnpm run migrations\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Three new tables are added to the database: the ",(0,r.jsx)(t.code,{children:"user"})," and ",(0,r.jsx)(t.code,{children:"story"})," tables and a ",(0,r.jsx)(t.code,{children:"sessions"})," table."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"+------------+-----------+-------------------------------------+\n|                             user                             |\n+------------+-----------+-------------------------------------+\n| id         | integer   | PRIMARY KEY AUTO_INCREMENT NOT NULL |\n| email      | varchar   | UNIQUE NOT NULL                     |\n| password   | varchar   | NOT NULL                            |\n| name       | varchar   | NOT NULL                            |\n| avatar     | varchar   | NOT NULL                            |\n+------------+-----------+-------------------------------------+\n"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"+------------+-----------+-------------------------------------+\n|                             story                            |\n+------------+-----------+-------------------------------------+\n| id         | integer   | PRIMARY KEY AUTO_INCREMENT NOT NULL |\n| authorId   | integer   | NOT NULL                            |\n| title      | varchar   | NOT NULL                            |\n| link       | varchar   | NOT NULL                            |\n+------------+-----------+-------------------------------------+\n"})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var r=n(96540);const o={},s=r.createContext(o);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);