"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7909],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var r=t(96540);const s={},o=r.createContext(s);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:n},e.children)}},49416:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"tutorials/real-world-example-with-react/tuto-3-the-models","title":"The User and Story Models","description":"Now that the database connection is established, you can create your two entities User and Story.","source":"@site/versioned_docs/version-3.x/tutorials/real-world-example-with-react/3-the-models.md","sourceDirName":"tutorials/real-world-example-with-react","slug":"/tutorials/real-world-example-with-react/3-the-models","permalink":"/docs/3.x/tutorials/real-world-example-with-react/3-the-models","draft":false,"unlisted":false,"editUrl":"https://github.com/FoalTS/foal/edit/master/docs/versioned_docs/version-3.x/tutorials/real-world-example-with-react/3-the-models.md","tags":[],"version":"3.x","sidebarPosition":3,"frontMatter":{"title":"The User and Story Models","id":"tuto-3-the-models","slug":"3-the-models"},"sidebar":"someSidebar","previous":{"title":"Database Set Up","permalink":"/docs/3.x/tutorials/real-world-example-with-react/2-database-set-up"},"next":{"title":"The Shell Scripts","permalink":"/docs/3.x/tutorials/real-world-example-with-react/4-the-shell-scripts"}}');var s=t(74848),o=t(28453);const a={title:"The User and Story Models",id:"tuto-3-the-models",slug:"3-the-models"},i=void 0,l={},d=[{value:"The <code>User</code> Model",id:"the-user-model",level:2},{value:"The <code>Story</code> Model",id:"the-story-model",level:2},{value:"Run Migrations",id:"run-migrations",level:2}];function c(e){const n={blockquote:"blockquote",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Now that the database connection is established, you can create your two entities ",(0,s.jsx)(n.code,{children:"User"})," and ",(0,s.jsx)(n.code,{children:"Story"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"User"})," entity will be the model used by the framework to identify users and the ",(0,s.jsx)(n.code,{children:"Story"})," entity will represent the users' posts."]}),"\n",(0,s.jsxs)(n.h2,{id:"the-user-model",children:["The ",(0,s.jsx)(n.code,{children:"User"})," Model"]}),"\n",(0,s.jsxs)(n.p,{children:["Open the ",(0,s.jsx)(n.code,{children:"user.entity.ts"})," file from the ",(0,s.jsx)(n.code,{children:"entities"})," directory and add four new properties to your model: ",(0,s.jsx)(n.code,{children:"email"}),", ",(0,s.jsx)(n.code,{children:"password"}),", ",(0,s.jsx)(n.code,{children:"name"})," and ",(0,s.jsx)(n.code,{children:"avatar"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"avatar"})," column will contain the paths to the profile images."]}),"\n",(0,s.jsxs)(n.p,{children:["You will also need to export an additional model ",(0,s.jsx)(n.code,{children:"DatabaseSession"})," from the ",(0,s.jsx)(n.code,{children:"@foal/typeorm"})," package. You don't need to worry about it now, it will be used later in the tutorial when you add authentication."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { BaseEntity, Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class User extends BaseEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ unique: true })\n  email: string;\n\n  @Column()\n  password: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  avatar: string;\n\n}\n\n// This line is required. It will be used to create the SQL session table later in the tutorial.\nexport { DatabaseSession } from '@foal/typeorm';\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"the-story-model",children:["The ",(0,s.jsx)(n.code,{children:"Story"})," Model"]}),"\n",(0,s.jsx)(n.p,{children:"Then create your second entity."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"foal generate entity story\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Open the new file and add three new properties: ",(0,s.jsx)(n.code,{children:"author"}),", ",(0,s.jsx)(n.code,{children:"title"})," and ",(0,s.jsx)(n.code,{children:"link"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { BaseEntity, Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { User } from './user.entity';\n\n@Entity()\nexport class Story extends BaseEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ManyToOne(type => User, { nullable: false })\n  author: User;\n\n  @Column()\n  title: string;\n\n  @Column()\n  link: string;\n\n}\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["By default, TypeORM allows ",(0,s.jsx)(n.em,{children:"many-to-one"})," relationships to be nullable. The option passed to the decorator specifies that this one cannot be."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"run-migrations",children:"Run Migrations"}),"\n",(0,s.jsx)(n.p,{children:"Finally, create the tables in the database. Generate the migrations from the entities and run them."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run makemigrations\nnpm run migrations\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Three new tables are added to the database: the ",(0,s.jsx)(n.code,{children:"user"})," and ",(0,s.jsx)(n.code,{children:"story"})," tables and a ",(0,s.jsx)(n.code,{children:"sessions"})," table."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"+------------+-----------+-------------------------------------+\n|                             user                             |\n+------------+-----------+-------------------------------------+\n| id         | integer   | PRIMARY KEY AUTO_INCREMENT NOT NULL |\n| email      | varchar   | UNIQUE NOT NULL                     |\n| password   | varchar   | NOT NULL                            |\n| name       | varchar   | NOT NULL                            |\n| avatar     | varchar   | NOT NULL                            |\n+------------+-----------+-------------------------------------+\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"+------------+-----------+-------------------------------------+\n|                             story                            |\n+------------+-----------+-------------------------------------+\n| id         | integer   | PRIMARY KEY AUTO_INCREMENT NOT NULL |\n| authorId   | integer   | NOT NULL                            |\n| title      | varchar   | NOT NULL                            |\n| link       | varchar   | NOT NULL                            |\n+------------+-----------+-------------------------------------+\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);