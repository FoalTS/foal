"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[20049],{91023:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"1.x","label":"v1","banner":"unmaintained","badge":true,"noIndex":true,"className":"docs-version-1.x","isLast":false,"docsSidebars":{"someSidebar":[{"type":"link","label":"Why FoalTS?","href":"/docs/1.x/","docId":"README","unlisted":false},{"type":"category","label":"TUTORIALS","collapsed":false,"items":[{"type":"category","label":"Simple To-Do List","items":[{"type":"link","label":"Installation","href":"/docs/1.x/tutorials/simple-todo-list/tuto-1-installation","docId":"tutorials/simple-todo-list/tuto-1-installation","unlisted":false},{"type":"link","label":"Introduction","href":"/docs/1.x/tutorials/simple-todo-list/tuto-2-introduction","docId":"tutorials/simple-todo-list/tuto-2-introduction","unlisted":false},{"type":"link","label":"The Todo Model","href":"/docs/1.x/tutorials/simple-todo-list/tuto-3-the-todo-model","docId":"tutorials/simple-todo-list/tuto-3-the-todo-model","unlisted":false},{"type":"link","label":"The Shell Script create-todo","href":"/docs/1.x/tutorials/simple-todo-list/tuto-4-the-shell-script-create-todo","docId":"tutorials/simple-todo-list/tuto-4-the-shell-script-create-todo","unlisted":false},{"type":"link","label":"The REST API","href":"/docs/1.x/tutorials/simple-todo-list/tuto-5-the-rest-api","docId":"tutorials/simple-todo-list/tuto-5-the-rest-api","unlisted":false},{"type":"link","label":"Validation & Sanitization","href":"/docs/1.x/tutorials/simple-todo-list/tuto-6-validation-and-sanitization","docId":"tutorials/simple-todo-list/tuto-6-validation-and-sanitization","unlisted":false},{"type":"link","label":"Unit Testing","href":"/docs/1.x/tutorials/simple-todo-list/tuto-7-unit-testing","docId":"tutorials/simple-todo-list/tuto-7-unit-testing","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Multi-User To-Do List","items":[{"type":"link","label":"Introduction","href":"/docs/1.x/tutorials/multi-user-todo-list/tuto-1-Introduction","docId":"tutorials/multi-user-todo-list/tuto-1-Introduction","unlisted":false},{"type":"link","label":"The User & Todo Models","href":"/docs/1.x/tutorials/multi-user-todo-list/tuto-2-the-user-and-todo-models","docId":"tutorials/multi-user-todo-list/tuto-2-the-user-and-todo-models","unlisted":false},{"type":"link","label":"The Shell Scripts","href":"/docs/1.x/tutorials/multi-user-todo-list/tuto-3-the-shell-scripts","docId":"tutorials/multi-user-todo-list/tuto-3-the-shell-scripts","unlisted":false},{"type":"link","label":"Auth Controllers and Hooks","href":"/docs/1.x/tutorials/multi-user-todo-list/tuto-5-auth-controllers-and-hooks","docId":"tutorials/multi-user-todo-list/tuto-5-auth-controllers-and-hooks","unlisted":false},{"type":"link","label":"Todos & Ownership","href":"/docs/1.x/tutorials/multi-user-todo-list/tuto-6-todos-and-ownership","docId":"tutorials/multi-user-todo-list/tuto-6-todos-and-ownership","unlisted":false},{"type":"link","label":"The Sign Up Page","href":"/docs/1.x/tutorials/multi-user-todo-list/tuto-7-the-signup-page","docId":"tutorials/multi-user-todo-list/tuto-7-the-signup-page","unlisted":false},{"type":"link","label":"E2E Testing & Auth","href":"/docs/1.x/tutorials/multi-user-todo-list/tuto-8-e2e-testing-and-authentication","docId":"tutorials/multi-user-todo-list/tuto-8-e2e-testing-and-authentication","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"MongoDB To-Do List","items":[{"type":"link","label":"Installation","href":"/docs/1.x/tutorials/mongodb-todo-list/tuto-1-installation","docId":"tutorials/mongodb-todo-list/tuto-1-installation","unlisted":false},{"type":"link","label":"Introduction","href":"/docs/1.x/tutorials/mongodb-todo-list/tuto-2-introduction","docId":"tutorials/mongodb-todo-list/tuto-2-introduction","unlisted":false},{"type":"link","label":"The Todo Model","href":"/docs/1.x/tutorials/mongodb-todo-list/tuto-3-the-todo-model","docId":"tutorials/mongodb-todo-list/tuto-3-the-todo-model","unlisted":false},{"type":"link","label":"The Shell Script create-todo","href":"/docs/1.x/tutorials/mongodb-todo-list/tuto-4-the-shell-script-create-todo","docId":"tutorials/mongodb-todo-list/tuto-4-the-shell-script-create-todo","unlisted":false},{"type":"link","label":"The REST API","href":"/docs/1.x/tutorials/mongodb-todo-list/tuto-5-the-rest-api","docId":"tutorials/mongodb-todo-list/tuto-5-the-rest-api","unlisted":false},{"type":"link","label":"Validation and Sanitization","href":"/docs/1.x/tutorials/mongodb-todo-list/tuto-6-validation-and-sanitization","docId":"tutorials/mongodb-todo-list/tuto-6-validation-and-sanitization","unlisted":false},{"type":"link","label":"Unit Testing","href":"/docs/1.x/tutorials/mongodb-todo-list/tuto-7-unit-testing","docId":"tutorials/mongodb-todo-list/tuto-7-unit-testing","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsible":true},{"type":"category","label":"TOPIC GUIDES","collapsed":false,"items":[{"type":"category","label":"Architecture","items":[{"type":"link","label":"Architecture Overview","href":"/docs/1.x/architecture/architecture-overview","docId":"architecture/architecture-overview","unlisted":false},{"type":"link","label":"Controllers","href":"/docs/1.x/architecture/controllers","docId":"architecture/controllers","unlisted":false},{"type":"link","label":"Services & Dependency Injection","href":"/docs/1.x/architecture/services-and-dependency-injection","docId":"architecture/services-and-dependency-injection","unlisted":false},{"type":"link","label":"Hooks","href":"/docs/1.x/architecture/hooks","docId":"architecture/hooks","unlisted":false},{"type":"link","label":"Initialization","href":"/docs/1.x/architecture/initialization","docId":"architecture/initialization","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Databases","items":[{"type":"link","label":"SQL Databases (TypeORM)","href":"/docs/1.x/databases/typeorm","docId":"databases/typeorm","unlisted":false},{"type":"link","label":"Create Models & Queries","href":"/docs/1.x/databases/create-models-and-queries","docId":"databases/create-models-and-queries","unlisted":false},{"type":"link","label":"Generate & Run Migrations","href":"/docs/1.x/databases/generate-and-run-migrations","docId":"databases/generate-and-run-migrations","unlisted":false},{"type":"link","label":"MongoDB (TypeORM or Mongoose)","href":"/docs/1.x/databases/mongodb","docId":"databases/mongodb","unlisted":false},{"type":"link","label":"Using Another ORM","href":"/docs/1.x/databases/using-another-orm","docId":"databases/using-another-orm","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Authentication & Access Control","items":[{"type":"link","label":"Quick Start","href":"/docs/1.x/authentication-and-access-control/quick-start","docId":"authentication-and-access-control/quick-start","unlisted":false},{"type":"link","label":"User Class and create-user Script","href":"/docs/1.x/authentication-and-access-control/user-class","docId":"authentication-and-access-control/user-class","unlisted":false},{"type":"link","label":"Passwords","href":"/docs/1.x/authentication-and-access-control/password-management","docId":"authentication-and-access-control/password-management","unlisted":false},{"type":"link","label":"Session Tokens (authentication)","href":"/docs/1.x/authentication-and-access-control/session-tokens","docId":"authentication-and-access-control/session-tokens","unlisted":false},{"type":"link","label":"JSON Web Tokens (authentication)","href":"/docs/1.x/authentication-and-access-control/jwt","docId":"authentication-and-access-control/jwt","unlisted":false},{"type":"link","label":"Social Auth","href":"/docs/1.x/authentication-and-access-control/social-auth","docId":"authentication-and-access-control/social-auth","unlisted":false},{"type":"link","label":"Administrators & Roles","href":"/docs/1.x/authentication-and-access-control/administrators-and-roles","docId":"authentication-and-access-control/administrators-and-roles","unlisted":false},{"type":"link","label":"Groups & Permissions","href":"/docs/1.x/authentication-and-access-control/groups-and-permissions","docId":"authentication-and-access-control/groups-and-permissions","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Validation & Sanitization","href":"/docs/1.x/validation-and-sanitization","docId":"validation-and-sanitization","unlisted":false},{"type":"link","label":"Serializing & Deserializing","href":"/docs/1.x/serializing-and-deserializing","docId":"serializing-and-deserializing","unlisted":false},{"type":"category","label":"API","items":[{"type":"link","label":"REST API","href":"/docs/1.x/api-section/rest-blueprints","docId":"api-section/rest-blueprints","unlisted":false},{"type":"link","label":"OpenAPI & Swagger UI","href":"/docs/1.x/api-section/openapi-and-swagger-ui","docId":"api-section/openapi-and-swagger-ui","unlisted":false},{"type":"link","label":"Public API & CORS Requests","href":"/docs/1.x/api-section/public-api-and-cors-requests","docId":"api-section/public-api-and-cors-requests","unlisted":false},{"type":"link","label":"GraphQL","href":"/docs/1.x/api-section/graphql","docId":"api-section/graphql","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Frontend Integration","items":[{"type":"link","label":"Single Page Applications (SPA)","href":"/docs/1.x/frontend-integration/single-page-applications","docId":"frontend-integration/single-page-applications","unlisted":false},{"type":"link","label":"Angular, React & Vue","href":"/docs/1.x/frontend-integration/angular-react-vue","docId":"frontend-integration/angular-react-vue","unlisted":false},{"type":"link","label":"JSX Server-Side Rendering","href":"/docs/1.x/frontend-integration/jsx-server-side-rendering","docId":"frontend-integration/jsx-server-side-rendering","unlisted":false},{"type":"link","label":"Nuxt.js","href":"/docs/1.x/frontend-integration/nuxt.js","docId":"frontend-integration/nuxt.js","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"File System","items":[{"type":"link","label":"Local & Cloud Storage","href":"/docs/1.x/file-system/local-and-cloud-storage","docId":"file-system/local-and-cloud-storage","unlisted":false},{"type":"link","label":"Upload & Download Files","href":"/docs/1.x/file-system/upload-and-download-files","docId":"file-system/upload-and-download-files","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"CLI & Development Environment","items":[{"type":"link","label":"Build & Start the App","href":"/docs/1.x/development-environment/build-and-start-the-app","docId":"development-environment/build-and-start-the-app","unlisted":false},{"type":"link","label":"Create & Run Scripts","href":"/docs/1.x/development-environment/create-and-run-scripts","docId":"development-environment/create-and-run-scripts","unlisted":false},{"type":"link","label":"Code Generation","href":"/docs/1.x/development-environment/code-generation","docId":"development-environment/code-generation","unlisted":false},{"type":"link","label":"Linting & Code Style","href":"/docs/1.x/development-environment/linting-and-code-style","docId":"development-environment/linting-and-code-style","unlisted":false},{"type":"link","label":"VSCode","href":"/docs/1.x/development-environment/vscode","docId":"development-environment/vscode","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Testing","items":[{"type":"link","label":"Introduction","href":"/docs/1.x/testing/introduction","docId":"testing/introduction","unlisted":false},{"type":"link","label":"Unit Testing","href":"/docs/1.x/testing/unit-testing","docId":"testing/unit-testing","unlisted":false},{"type":"link","label":"E2E Testing","href":"/docs/1.x/testing/e2e-testing","docId":"testing/e2e-testing","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Cloud","items":[{"type":"link","label":"AWS Beanstalk","href":"/docs/1.x/cloud/aws-beanstalk","docId":"cloud/aws-beanstalk","unlisted":false},{"type":"link","label":"Firebase","href":"/docs/1.x/cloud/firebase","docId":"cloud/firebase","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Security","items":[{"type":"link","label":"HTTP Headers Protection","href":"/docs/1.x/security/http-headers-protection","docId":"security/http-headers-protection","unlisted":false},{"type":"link","label":"CSRF Protection","href":"/docs/1.x/security/csrf-protection","docId":"security/csrf-protection","unlisted":false},{"type":"link","label":"XSS Protection","href":"/docs/1.x/security/xss-protection","docId":"security/xss-protection","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Utilities","items":[{"type":"link","label":"Templates (SSR)","href":"/docs/1.x/utilities/templating","docId":"utilities/templating","unlisted":false},{"type":"link","label":"Logging & Debugging","href":"/docs/1.x/utilities/logging-and-debugging","docId":"utilities/logging-and-debugging","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Cookbook","items":[{"type":"link","label":"Error Handling","href":"/docs/1.x/cookbook/error-handling","docId":"cookbook/error-handling","unlisted":false},{"type":"link","label":"Generate Tokens","href":"/docs/1.x/cookbook/generate-tokens","docId":"cookbook/generate-tokens","unlisted":false},{"type":"link","label":"Scheduling Jobs","href":"/docs/1.x/cookbook/scheduling-jobs","docId":"cookbook/scheduling-jobs","unlisted":false},{"type":"link","label":"404 Page","href":"/docs/1.x/cookbook/not-found-page","docId":"cookbook/not-found-page","unlisted":false},{"type":"link","label":"Request Body Size","href":"/docs/1.x/cookbook/request-body-size","docId":"cookbook/request-body-size","unlisted":false},{"type":"link","label":"ExpressJS","href":"/docs/1.x/cookbook/expressjs","docId":"cookbook/expressjs","unlisted":false},{"type":"link","label":"Root Imports","href":"/docs/1.x/cookbook/root-imports","docId":"cookbook/root-imports","unlisted":false},{"type":"link","label":"Limit Repeated Requests","href":"/docs/1.x/cookbook/limit-repeated-requests","docId":"cookbook/limit-repeated-requests","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Deployment & Environments","items":[{"type":"link","label":"Configuration","href":"/docs/1.x/deployment-and-environments/configuration","docId":"deployment-and-environments/configuration","unlisted":false},{"type":"link","label":"Ship to Production","href":"/docs/1.x/deployment-and-environments/ship-to-production","docId":"deployment-and-environments/ship-to-production","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsible":true},{"type":"category","label":"Upgrading","collapsed":false,"items":[{"type":"link","label":"To v1","href":"https://github.com/FoalTS/foal/releases/tag/v1.0.0"},{"type":"link","label":"To v0.8","href":"https://github.com/FoalTS/foal/releases/tag/v0.8.0"}],"collapsible":true},{"type":"category","label":"Community","collapsed":false,"items":[{"type":"link","label":"Awesome Foal","href":"https://github.com/FoalTS/awesome-foalts"}],"collapsible":true}]},"docs":{"api-section/graphql":{"id":"api-section/graphql","title":"GraphQL","description":"GraphQL is a query language for APIs. Unlike traditional REST APIs, GraphQL APIs have only one endpoint to which requests are sent. The content of the request describes all the operations to be performed and the data to be returned in the response. Many resources can be retrieved in a single request and the client gets exactly the properties it asks for.","sidebar":"someSidebar"},"api-section/openapi-and-swagger-ui":{"id":"api-section/openapi-and-swagger-ui","title":"OpenAPI & Swagger UI","description":"Introduction","sidebar":"someSidebar"},"api-section/public-api-and-cors-requests":{"id":"api-section/public-api-and-cors-requests","title":"Public API & CORS Requests","description":"Building an Open API requires to allow Cross-Origin Request Sharing.","sidebar":"someSidebar"},"api-section/rest-blueprints":{"id":"api-section/rest-blueprints","title":"REST API","description":"Example:","sidebar":"someSidebar"},"architecture/architecture-overview":{"id":"architecture/architecture-overview","title":"Architecture Overview","description":"FoalTS is a framework for creating server-side Node.js applications. It is written in TypeScript, a typed superset of JavaScript that provides advanced development tools and the latest language features.","sidebar":"someSidebar"},"architecture/controllers":{"id":"architecture/controllers","title":"Controllers","description":"Description","sidebar":"someSidebar"},"architecture/hooks":{"id":"architecture/hooks","title":"Hooks","description":"Description","sidebar":"someSidebar"},"architecture/initialization":{"id":"architecture/initialization","title":"Initialization","description":"In many situations, we need to initialize the application (i.e perform certain actions) before listening to incoming HTTP requests. This is the case, for example, if you need to establish a connection to the database.","sidebar":"someSidebar"},"architecture/services-and-dependency-injection":{"id":"architecture/services-and-dependency-injection","title":"Services & Dependency Injection","description":"Description","sidebar":"someSidebar"},"authentication-and-access-control/administrators-and-roles":{"id":"authentication-and-access-control/administrators-and-roles","title":"Administrators & Roles","description":"In simple applications, access control can be managed with static roles or even with an isAdmin column in the simplest cases.","sidebar":"someSidebar"},"authentication-and-access-control/groups-and-permissions":{"id":"authentication-and-access-control/groups-and-permissions","title":"Groups & Permissions","description":"In advanced applications, access control can be managed through permissions and groups.","sidebar":"someSidebar"},"authentication-and-access-control/jwt":{"id":"authentication-and-access-control/jwt","title":"Authentication with JWT","description":"JSON Web Token (JWT) is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed. JWTs can be signed using a secret (with the HMAC algorithm) or a public/private key pair using RSA or ECDSA.","sidebar":"someSidebar"},"authentication-and-access-control/password-management":{"id":"authentication-and-access-control/password-management","title":"Password Management","description":"Every application must store passwords using a cryptographic technique. FoalTS provides two functions to hash and verify passwords.","sidebar":"someSidebar"},"authentication-and-access-control/quick-start":{"id":"authentication-and-access-control/quick-start","title":"Quick Start","description":"Authentication is the process of verifying that a user is who he or she claims to be. It answers the question Who is the user?.","sidebar":"someSidebar"},"authentication-and-access-control/session-tokens":{"id":"authentication-and-access-control/session-tokens","title":"Session Tokens","description":"Introduction","sidebar":"someSidebar"},"authentication-and-access-control/social-auth":{"id":"authentication-and-access-control/social-auth","title":"Social Authentication","description":"Social authentication is available in Foal v1.3.0 onwards.","sidebar":"someSidebar"},"authentication-and-access-control/user-class":{"id":"authentication-and-access-control/user-class","title":"User Class and create-user Script","description":"The User Entity","sidebar":"someSidebar"},"cloud/aws-beanstalk":{"id":"cloud/aws-beanstalk","title":"AWS Beanstalk","description":"This tutorial shows how to deploy an application with an SQL database to AWS Beanstalk. It assumes that you already have an AWS account and have access to your console.","sidebar":"someSidebar"},"cloud/firebase":{"id":"cloud/firebase","title":"Firebase","description":"This document explains how to create and deploy an application with Firebase. It assumes that you do not use TypeORM since Firebase does not provide SQL databases.","sidebar":"someSidebar"},"cookbook/error-handling":{"id":"cookbook/error-handling","title":"Error Handling","description":"When creating a new project with Foal, error handling is already configured for you. When an error is thrown or rejected in a controller or a hook, the application returns an html page Internal Server Error with the status code 500. If the configuration key settings.debug is set to true (which is the case during development or testing), the page includes some details about the error (name, message, stack trace, etc).","sidebar":"someSidebar"},"cookbook/expressjs":{"id":"cookbook/expressjs","title":"ExpressJS","description":"FoalTS applications are created with the createApp function in the src/index.ts file. This function takes the root controller class (known as AppController) as parameter.","sidebar":"someSidebar"},"cookbook/generate-tokens":{"id":"cookbook/generate-tokens","title":"Generate Tokens","description":"In many situations, we need to generate tokens and then verify them (for example in the flow of a password reset). This document shows how to do so with FoalTS.","sidebar":"someSidebar"},"cookbook/limit-repeated-requests":{"id":"cookbook/limit-repeated-requests","title":"Limit Repeated Requests","description":"To prevent brute force attacks or overloads on your application, you need to implement a rate limiter to limit the number of requests a user is able to send to your application.","sidebar":"someSidebar"},"cookbook/not-found-page":{"id":"cookbook/not-found-page","title":"404 Page","description":"Here\'s a way to implement custom 404 pages.","sidebar":"someSidebar"},"cookbook/request-body-size":{"id":"cookbook/request-body-size","title":"Request Body Size","description":"By default, FoalTS only accepts request bodies lower than 100kb. This value can be increased by using the configuration key settings.bodyParser.limit. If a number is provided, then the value specifies the number of bytes. If it is a string, the value is passed to the bytes library for parsing.","sidebar":"someSidebar"},"cookbook/root-imports":{"id":"cookbook/root-imports","title":"Root Imports","description":"FoalTS build does not resolve root imports by default. You must install the module-alias package if you want to use them. Here\'s how to configure the library with Foal:","sidebar":"someSidebar"},"cookbook/scheduling-jobs":{"id":"cookbook/scheduling-jobs","title":"Scheduling Jobs","description":"You can schedule jobs using shell scripts and the node-schedule library.","sidebar":"someSidebar"},"databases/create-models-and-queries":{"id":"databases/create-models-and-queries","title":"Create Models & Queries","description":"Entities","sidebar":"someSidebar"},"databases/generate-and-run-migrations":{"id":"databases/generate-and-run-migrations","title":"Generate & Run Migrations","description":"Database migrations are a way of propagating changes you make to your entities into your database schema. The changes you make to your models (adding a field, deleting an entity, etc.) do not automatically modify your database. You have to do it yourself.","sidebar":"someSidebar"},"databases/mongodb":{"id":"databases/mongodb","title":"MongoDB","description":"FoalTS provides two ways to interact with a MongoDB database in your application: Mongoose and TypeORM.","sidebar":"someSidebar"},"databases/typeorm":{"id":"databases/typeorm","title":"TypeORM","description":"FoalTS components using TypeORM officially support the following databases: PostgreSQL, MySQL, MariaDB and SQLite.","sidebar":"someSidebar"},"databases/using-another-orm":{"id":"databases/using-another-orm","title":"Using Another ORM or Query Builder","description":"If you want to use another ORM/ODM (Sequelize, Objection.js, etc) or just do not want to use one at all, you can uninstall the typeorm and @foal/typeorm packages. The framework core is TypeORM-independent.","sidebar":"someSidebar"},"deployment-and-environments/configuration":{"id":"deployment-and-environments/configuration","title":"Configuration","description":"In FoalTS, configuration refers to any parameter that may vary between deploy environments (production, development, test, etc). It includes sensitive information, such as your database credentials, or simple settings, such as the server port.","sidebar":"someSidebar"},"deployment-and-environments/ship-to-production":{"id":"deployment-and-environments/ship-to-production","title":"Ship to Production","description":"1. Set the Node.JS environment to production","sidebar":"someSidebar"},"development-environment/build-and-start-the-app":{"id":"development-environment/build-and-start-the-app","title":"Build & Start the App","description":"FoalTS provides several commands to help you build and develop your app.","sidebar":"someSidebar"},"development-environment/code-generation":{"id":"development-environment/code-generation","title":"Code Generation","description":"Create a project","sidebar":"someSidebar"},"development-environment/create-and-run-scripts":{"id":"development-environment/create-and-run-scripts","title":"Create & Run Scripts","description":"Sometimes we have to execute some tasks from the command line. These tasks can serve different purposes such as populating a database (user creation, etc) for instance. They often need to access some of the app classes and functions. This is when shell scripts come into play.","sidebar":"someSidebar"},"development-environment/linting-and-code-style":{"id":"development-environment/linting-and-code-style","title":"Linting & Code Style","description":"A linter is a tool that analizes source code to flag programming errors, bugs, stylistic errors, and suspicious constructs. In particular, it helps teams to keep the code consistent between their members.","sidebar":"someSidebar"},"development-environment/vscode":{"id":"development-environment/vscode","title":"Visual Studio Code","description":"Visual Studio Code is a lightweight but powerful source code editor which runs on your desktop and is available for Windows, macOS and Linux. It comes with built-in support for JavaScript, TypeScript and Node.js.","sidebar":"someSidebar"},"file-system/local-and-cloud-storage":{"id":"file-system/local-and-cloud-storage","title":"Local & Cloud Storage","description":"File storage is available in Foal v1.6 onwards.","sidebar":"someSidebar"},"file-system/upload-and-download-files":{"id":"file-system/upload-and-download-files","title":"Upload & Download Files","description":"Files can be uploaded and downloaded using FoalTS file system. It allows you to use different types of file storage such as the local file system or cloud storage.","sidebar":"someSidebar"},"frontend-integration/angular-react-vue":{"id":"frontend-integration/angular-react-vue","title":"Angular, React & Vue","description":"Angular, React and Vue all provide powerful CLIs for creating frontend applications. These tools are widely used, regularly improved and extensively documented. That\'s why Foal CLI do not provide ready-made features to build the frontend in their place.","sidebar":"someSidebar"},"frontend-integration/jsx-server-side-rendering":{"id":"frontend-integration/jsx-server-side-rendering","title":"JSX Server-Side Rendering","description":"If you are interested in SSR without JSX, then you might take a look at the \\"templating\\" page.","sidebar":"someSidebar"},"frontend-integration/nuxt.js":{"id":"frontend-integration/nuxt.js","title":"Nuxt.js","description":"Nuxt.js is a frontend framework based on Vue.JS.","sidebar":"someSidebar"},"frontend-integration/single-page-applications":{"id":"frontend-integration/single-page-applications","title":"Single Page Applications (SPA)","description":"Single-Page Applications are Web Applications that are loaded once upon the first request(s) to the backend. After retreiving all the necessary code from the server, the current page is rendered and updated directly in the browser without asking the server to render new pages. During its lifecycle, the application usually communicates with the server by making API calls to fetch, create, update or delete data. This is a common pattern used when creating a new application with Angular, React or Vue.","sidebar":"someSidebar"},"README":{"id":"README","title":"Why FoalTS?","description":"License: MIT","sidebar":"someSidebar"},"security/csrf-protection":{"id":"security/csrf-protection","title":"CSRF Protection","description":"Cross-Site Request Forgery (CSRF) is a type of attack that occurs when a malicious web site, email, blog, instant message, or program causes a user\u2019s web browser to perform an unwanted action on a trusted site when the user is authenticated.","sidebar":"someSidebar"},"security/http-headers-protection":{"id":"security/http-headers-protection","title":"HTTP Headers Protection","description":"To protect the application against some (!) common attacks, FoalTS sets by default various HTTP headers. These can be overrided in the HttpResponse objects.","sidebar":"someSidebar"},"security/xss-protection":{"id":"security/xss-protection","title":"XSS Protection","description":"FoalTS provides some utils to protect you against XSS attacks.","sidebar":"someSidebar"},"serializing-and-deserializing":{"id":"serializing-and-deserializing","title":"Serializing & Deserializing","description":"This document shows how to serialize class instances into plain objects and, conversely, how to deserialize plain objects into class instances. It is based on the class-transformer library.","sidebar":"someSidebar"},"testing/e2e-testing":{"id":"testing/e2e-testing","title":"E2E Testing","description":"End-to-end tests are located in the src/e2e directory.","sidebar":"someSidebar"},"testing/introduction":{"id":"testing/introduction","title":"Introduction","description":"Every shipped app should come with a minimum set of tests. Writing tests lets you find problems early, facilitate changes and document your code. FoalTS is designed to be easily testable and provides the tools you need to write tests right away.","sidebar":"someSidebar"},"testing/unit-testing":{"id":"testing/unit-testing","title":"Unit Testing","description":"Convention","sidebar":"someSidebar"},"tutorials/mongodb-todo-list/tuto-1-installation":{"id":"tutorials/mongodb-todo-list/tuto-1-installation","title":"Installation","description":"In this tutorial you will learn how to create a basic web application with FoalTS and MongoDB. The demo application is a simple to-do list with which users can view, create and delete their tasks.","sidebar":"someSidebar"},"tutorials/mongodb-todo-list/tuto-2-introduction":{"id":"tutorials/mongodb-todo-list/tuto-2-introduction","title":"Introduction","description":"The application that you will create is a simple to-do list. It consists of a frontend part that has already been written for you and a backend part that will be the topic of this tutorial.","sidebar":"someSidebar"},"tutorials/mongodb-todo-list/tuto-3-the-todo-model":{"id":"tutorials/mongodb-todo-list/tuto-3-the-todo-model","title":"The Todo Model","description":"Let\'s create your first model. The CLI provides a useful command to generate a new file with an empty model.","sidebar":"someSidebar"},"tutorials/mongodb-todo-list/tuto-4-the-shell-script-create-todo":{"id":"tutorials/mongodb-todo-list/tuto-4-the-shell-script-create-todo","title":"The Shell Script create-todo","description":"Now it is time to populate the database with some tasks.","sidebar":"someSidebar"},"tutorials/mongodb-todo-list/tuto-5-the-rest-api":{"id":"tutorials/mongodb-todo-list/tuto-5-the-rest-api","title":"The REST API","description":"Good, so far you have a frontend working properly and some todos in your database. Now it is time to code a REST API to link them both.","sidebar":"someSidebar"},"tutorials/mongodb-todo-list/tuto-6-validation-and-sanitization":{"id":"tutorials/mongodb-todo-list/tuto-6-validation-and-sanitization","title":"Validation and Sanitization","description":"Currently inputs received by the server are not checked. Everyone could send anything when requesting POST /api/todos. That\'s why client inputs cannot be trusted.","sidebar":"someSidebar"},"tutorials/mongodb-todo-list/tuto-7-unit-testing":{"id":"tutorials/mongodb-todo-list/tuto-7-unit-testing","title":"Unit Testing","description":"The last step of this tutorial is to add some unit tests to the ApiController.","sidebar":"someSidebar"},"tutorials/multi-user-todo-list/tuto-1-Introduction":{"id":"tutorials/multi-user-todo-list/tuto-1-Introduction","title":"Introduction","description":"In this tutorial you will learn how to manage users, authentication and authorization in FoalTS. You will also have a quick overview of end-to-end testing.","sidebar":"someSidebar"},"tutorials/multi-user-todo-list/tuto-2-the-user-and-todo-models":{"id":"tutorials/multi-user-todo-list/tuto-2-the-user-and-todo-models","title":"The User & Todo Models","description":"First of all, if you have downloaded the source code of the previous tutorial, compile and run the existing migrations.","sidebar":"someSidebar"},"tutorials/multi-user-todo-list/tuto-3-the-shell-scripts":{"id":"tutorials/multi-user-todo-list/tuto-3-the-shell-scripts","title":"The Shell Scripts","description":"Like in the previous tutorial, you are going to use shell scripts to populate the database.","sidebar":"someSidebar"},"tutorials/multi-user-todo-list/tuto-5-auth-controllers-and-hooks":{"id":"tutorials/multi-user-todo-list/tuto-5-auth-controllers-and-hooks","title":"Auth Controllers and Hooks","description":"So far, you have defined the User model and written a script to create new users with their password and email address. The next step is to create a controller to log users in or out.","sidebar":"someSidebar"},"tutorials/multi-user-todo-list/tuto-6-todos-and-ownership":{"id":"tutorials/multi-user-todo-list/tuto-6-todos-and-ownership","title":"Todos & Ownership","description":"Currently the API returns everyone\'s todos to each user. This is not the expected behavior. We would like that each user has access to only his or her tasks.","sidebar":"someSidebar"},"tutorials/multi-user-todo-list/tuto-7-the-signup-page":{"id":"tutorials/multi-user-todo-list/tuto-7-the-signup-page","title":"The Sign Up Page","description":"The sign up page, that is served in the app controller, makes a request POST /signup when the button Create an account is pressed.","sidebar":"someSidebar"},"tutorials/multi-user-todo-list/tuto-8-e2e-testing-and-authentication":{"id":"tutorials/multi-user-todo-list/tuto-8-e2e-testing-and-authentication","title":"E2E Testing and Authentication","description":"The last part of this tutorial explains how to write and run end-to-end tests. The purpose of these tests is not to verify that each feature of each component works, but to check that these components work properly together.","sidebar":"someSidebar"},"tutorials/simple-todo-list/tuto-1-installation":{"id":"tutorials/simple-todo-list/tuto-1-installation","title":"Installation","description":"In this tutorial you will learn how to create a basic web application with FoalTS. The demo application is a simple to-do list with which users can view, create and delete their tasks.","sidebar":"someSidebar"},"tutorials/simple-todo-list/tuto-2-introduction":{"id":"tutorials/simple-todo-list/tuto-2-introduction","title":"Introduction","description":"The application that you will create is a simple to-do list. It consists of a frontend part that has already been written for you and a backend part that will be the topic of this tutorial.","sidebar":"someSidebar"},"tutorials/simple-todo-list/tuto-3-the-todo-model":{"id":"tutorials/simple-todo-list/tuto-3-the-todo-model","title":"The Todo Model","description":"Let&#8217;s create your first model. The CLI provides a useful command to generate a new file with an empty model.","sidebar":"someSidebar"},"tutorials/simple-todo-list/tuto-4-the-shell-script-create-todo":{"id":"tutorials/simple-todo-list/tuto-4-the-shell-script-create-todo","title":"The Shell Script create-todo","description":"Now it is time to populate the database with some tasks.","sidebar":"someSidebar"},"tutorials/simple-todo-list/tuto-5-the-rest-api":{"id":"tutorials/simple-todo-list/tuto-5-the-rest-api","title":"The REST API","description":"Good, so far you have a frontend working properly and some todos in your database. Now it is time to code a REST API to link them both.","sidebar":"someSidebar"},"tutorials/simple-todo-list/tuto-6-validation-and-sanitization":{"id":"tutorials/simple-todo-list/tuto-6-validation-and-sanitization","title":"Validation & Sanitization","description":"Currently inputs received by the server are not checked. Everyone could send anything when requesting POST /api/todos. That\'s why client inputs cannot be trusted.","sidebar":"someSidebar"},"tutorials/simple-todo-list/tuto-7-unit-testing":{"id":"tutorials/simple-todo-list/tuto-7-unit-testing","title":"Unit Testing","description":"The last step of this tutorial is to add some unit tests to the ApiController.","sidebar":"someSidebar"},"utilities/logging-and-debugging":{"id":"utilities/logging-and-debugging","title":"Logging & Debugging","description":"HTTP Request Logging","sidebar":"someSidebar"},"utilities/templating":{"id":"utilities/templating","title":"Templates - Server-Side Rendering","description":"Regular Web Applications rely on templates to dynamically generate HTML pages on the server. These templates are text files that contain static content as well as a special syntax describing how the data should be inserted dynamically. During an HTTP request, the application loads and renders the template using the given contextual data and sends back the page to the client.","sidebar":"someSidebar"},"validation-and-sanitization":{"id":"validation-and-sanitization","title":"Validation & Sanitization","description":"Validation checks if an input meets a set of criteria (such as the value of a property is a string).","sidebar":"someSidebar"}}}}')}}]);