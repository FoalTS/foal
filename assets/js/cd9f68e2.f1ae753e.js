"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[29904],{1469:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/swagger-6ab4ff6257c5e238ae690231405c7d1e.png"},2551:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/banner-b1bb8a7ff5057bbac324ac1a22b55703.png"},21084:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>u});var r=t(53171),o=t(74848),s=t(28453),a=t(65537),i=t(79329);const l={title:"What's new in version 2 (part 2/4)",authors:"LoicPoullain",image:"blog/twitter-banners/whats-new-in-version-2-part-2.png",tags:["release"]},c=void 0,d={authorsImageUrls:[void 0]},u=[{value:"New Config System",id:"new-config-system",level:2},{value:"Type safety",id:"type-safety",level:3},{value:"Multiple <code>.env</code> files support",id:"multiple-env-files-support",level:3},{value:"Three config formats (JS, JSON, YAML)",id:"three-config-formats-js-json-yaml",level:3},{value:"More Liberty in Naming Environment Variables",id:"more-liberty-in-naming-environment-variables",level:3},{value:"OpenAPI Schemas &amp; Validation",id:"openapi-schemas--validation",level:2}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Banner",src:t(2551).A+"",width:"914",height:"315"})}),"\n",(0,o.jsx)(n.p,{children:"This article presents some improvements introduced in version 2 of FoalTS:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Configuration and type safety"}),"\n",(0,o.jsxs)(n.li,{children:["Configuration and ",(0,o.jsx)(n.code,{children:".env"})," files (",(0,o.jsx)(n.code,{children:".env"}),", ",(0,o.jsx)(n.code,{children:".env.test"}),", etc)"]}),"\n",(0,o.jsx)(n.li,{children:"Available configuration file formats (JSON, YAML and JS)"}),"\n",(0,o.jsx)(n.li,{children:"OpenAPI schemas and validation"}),"\n"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["This article is the part 2 of the series of articles ",(0,o.jsx)(n.em,{children:"What's new in version 2.0"}),". Part 1 can be found ",(0,o.jsx)(n.a,{href:"/blog/2021/02/17/whats-new-in-version-2-part-1",children:"here"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"new-config-system",children:"New Config System"}),"\n",(0,o.jsx)(n.h3,{id:"type-safety",children:"Type safety"}),"\n",(0,o.jsxs)(n.p,{children:["Starting from version 2, a great attention is paid to type safety in the configuration. The ",(0,o.jsx)(n.code,{children:"Config.get"})," method allows you specify which type you expect."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"const timeout = Config.get('custom.timeout', 'number');\n// The TypeScript type returned by `get` is number|undefined.\n"})}),"\n",(0,o.jsxs)(n.p,{children:["In this example, when calling the ",(0,o.jsx)(n.code,{children:"get"})," method, the framework will look at the configuration files to retrieve the desired value."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["If the value is not defined, the function returns ",(0,o.jsx)(n.code,{children:"undefined"}),"."]}),"\n",(0,o.jsx)(n.li,{children:"If the value is a number, the function returns it."}),"\n",(0,o.jsxs)(n.li,{children:["If the value is a string that can be converted to a number (ex: ",(0,o.jsx)(n.code,{children:'"1"'}),"), the function converts and returns it."]}),"\n",(0,o.jsxs)(n.li,{children:["If the value is not a number and cannot be converted, then the function throws a ",(0,o.jsx)(n.code,{children:"ConfigTypeError"})," with the details. Note that the config value is not logged to avoid leaking sensitive information."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["If you wish to make the config parameter mandatory, you can do it by using the ",(0,o.jsx)(n.code,{children:"getOrThrow"})," method. If no value is found, then a ",(0,o.jsx)(n.code,{children:"ConfigNotFound"})," error is thrown."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"const timeout = Config.getOrThrow('custom.timeout', 'number');\n// The TypeScript type returned by `get` is number.\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Supported types are ",(0,o.jsx)(n.code,{children:"string"}),", ",(0,o.jsx)(n.code,{children:"number"}),", ",(0,o.jsx)(n.code,{children:"boolean"}),", ",(0,o.jsx)(n.code,{children:"boolean|string"}),", ",(0,o.jsx)(n.code,{children:"number|string"})," and ",(0,o.jsx)(n.code,{children:"any"}),"."]}),"\n",(0,o.jsxs)(n.h3,{id:"multiple-env-files-support",children:["Multiple ",(0,o.jsx)(n.code,{children:".env"})," files support"]}),"\n",(0,o.jsxs)(n.p,{children:["Version 2 allows you to use different ",(0,o.jsx)(n.code,{children:".env"})," files depending on your environment."]}),"\n",(0,o.jsxs)(n.p,{children:["If you configuration is as follows and ",(0,o.jsx)(n.code,{children:"NODE_ENV"})," equals ",(0,o.jsx)(n.code,{children:"production"}),", then the framework will look at ",(0,o.jsx)(n.code,{children:".env.production"})," to retrieve the value and if it does not exist (the file or the value), Foal will look at ",(0,o.jsx)(n.code,{children:".env"}),"."]}),"\n",(0,o.jsxs)(a.A,{defaultValue:"yaml",values:[{label:"YAML",value:"yaml"},{label:"JSON",value:"json"},{label:"JS",value:"js"}],children:[(0,o.jsx)(i.A,{value:"yaml",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"settings:\n  jwt:\n    secret: env(SETTINGS_JWT_SECRET)\n"})})}),(0,o.jsx)(i.A,{value:"json",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "settings": {\n    "jwt": {\n      "secret": "env(SETTINGS_JWT_SECRET)",\n    }\n  }\n}\n'})})}),(0,o.jsx)(i.A,{value:"js",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const { Env } = require('@foal/core');\n\nmodule.exports = {\n  settings: {\n    jwt: {\n      secret: Env.get('SETTINGS_JWT_SECRET')\n    }\n  }\n}\n"})})})]}),"\n",(0,o.jsx)(n.h3,{id:"three-config-formats-js-json-yaml",children:"Three config formats (JS, JSON, YAML)"}),"\n",(0,o.jsx)(n.p,{children:"JSON and YAML were already supported in version 1. Starting from version 2, JS is also allowed."}),"\n",(0,o.jsxs)(a.A,{defaultValue:"yaml",values:[{label:"YAML",value:"yaml"},{label:"JSON",value:"json"},{label:"JS",value:"js"}],children:[(0,o.jsx)(i.A,{value:"yaml",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'settings:\n  session:\n    store: "@foal/typeorm"\n'})})}),(0,o.jsx)(i.A,{value:"json",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "settings": {\n    "session": {\n      "store": "@foal/typeorm"\n    }\n  }\n}\n'})})}),(0,o.jsx)(i.A,{value:"js",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'module.exports = {\n  settings: {\n    session: {\n      store: "@foal/typeorm"\n    }\n  }\n}\n'})})})]}),"\n",(0,o.jsx)(n.h3,{id:"more-liberty-in-naming-environment-variables",children:"More Liberty in Naming Environment Variables"}),"\n",(0,o.jsxs)(n.p,{children:["In version 1, the names of the environment variables were depending on the names of the configuration keys. For example, when using ",(0,o.jsx)(n.code,{children:"Config.get('settings.mongodbUri')"}),", Foal was looking at ",(0,o.jsx)(n.code,{children:"SETTINGS_MONGODB_URI"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Starting from version 2, it is your responsability to choose the environement variable that you want to use (if you use one). This gives more flexibility especially when a Cloud provider defines its own variable names."}),"\n",(0,o.jsxs)(a.A,{defaultValue:"yaml",values:[{label:"YAML",value:"yaml"},{label:"JSON",value:"json"},{label:"JS",value:"js"}],children:[(0,o.jsx)(i.A,{value:"yaml",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"settings:\n  mongodbUri: env(MONGODB_URI)\n"})})}),(0,o.jsx)(i.A,{value:"json",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "settings": {\n    "mongodbUri": "env(MONGODB_URI)"\n  }\n}\n'})})}),(0,o.jsx)(i.A,{value:"js",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const { Env } = require('@foal/core');\n\nmodule.exports = {\n  settings: {\n    mongodbUri: Env.get('MONGODB_URI')\n  }\n}\n"})})})]}),"\n",(0,o.jsx)(n.h2,{id:"openapi-schemas--validation",children:"OpenAPI Schemas & Validation"}),"\n",(0,o.jsxs)(n.p,{children:["Starting from version 1, Foal has allowed you to generate a complete ",(0,o.jsx)(n.a,{href:"https://swagger.io/tools/swagger-ui/",children:"Swagger"})," interface by reading your code. If your application has validation and auth hooks for example, Foal will use them to generate the proper interface."]}),"\n",(0,o.jsx)(n.p,{children:"This is a handy if you want to quickly test and document your API. Then you can customize it in your own way if you wish and complete and override the OpenAPI spec generated by the framework."}),"\n",(0,o.jsx)(n.p,{children:"In version 2, support of Swagger has been increased to allow you to define OpenAPI schemas and re-use them for validation."}),"\n",(0,o.jsx)(n.p,{children:"Here is an example."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"product.controller.ts"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { ApiDefineSchema, ApiResponse, Context, Get, HttpResponseNotFound, HttpResponseOK, Post, ValidateBody, ValidatePathParam } from '@foal/core';\nimport { Product } from '../../entities';\n\n// First we define the OpenAPI schema \"Product\".\n@ApiDefineSchema('Product', {\n  type: 'object',\n  properties: {\n    id: { type: 'number' },\n    name: { type: 'string' }\n  },\n  additionalProperties: false,\n  required: ['id', 'name'],\n})\nexport class ProductController {\n\n  @Post('/')\n  // We use the schema \"Product\" here to validate the request body.\n  @ValidateBody({ $ref: '#/components/schemas/Product' })\n  async createProduct(ctx: Context) {\n    const result = await Product.insert(ctx.request.body);\n    return new HttpResponseOK(result.identifiers[0]);\n  }\n\n  @Get('/:productId')\n  // We use the schema \"Product\" here to validate the URL parameter.\n  @ValidatePathParam('productId', { $ref: '#/components/schemas/Product/properties/id' })\n  // We give some extra information on the format of the response.\n  @ApiResponse(200, {\n    description: 'Product found in the database',\n    content: {\n      'application/json': { schema: { $ref: '#/components/schemas/Product' } }\n    }\n  })\n  async readProduct(ctx: Context, { productId }) {\n    const product = await Product.findOne({ id: productId });\n\n    if (!product) {\n      return new HttpResponseNotFound();\n    }\n\n    return new HttpResponseOK(product);\n  }\n\n}\n\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"api.controller.ts"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { ApiInfo, ApiServer, Context, controller, Get, HttpResponseOK } from '@foal/core';\nimport { ProductController } from './api';\n\n// We provide the \"info\" metadata to describe the API.\n@ApiInfo({\n  title: 'My API',\n  version: '0.1.0'\n})\n@ApiServer({\n  url: '/api'\n})\nexport class ApiController {\n  subControllers = [\n    controller('/products', ProductController)\n  ];\n  \n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"openapi.controller.ts"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { SwaggerController } from '@foal/swagger';\nimport { ApiController } from './api.controller';\n\n// This controller generates the Swagger interface.\nexport class OpenapiController extends SwaggerController {\n\n  options = {\n    controllerClass: ApiController,\n  }\n\n}\n\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"app.controller.ts"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { controller, IAppController } from '@foal/core';\nimport { createConnection } from 'typeorm';\n\nimport { ApiController, OpenapiController } from './controllers';\n\nexport class AppController implements IAppController {\n  subControllers = [\n    controller('/api', ApiController),\n    controller('/swagger', OpenapiController),\n  ];\n\n  async init() {\n    await createConnection();\n  }\n}\n\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Swagger 1",src:t(1469).A+"",width:"2560",height:"1396"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Swagger 2",src:t(37819).A+"",width:"2560",height:"1374"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Swagger 3",src:t(22994).A+"",width:"2560",height:"1394"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},22994:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/swagger3-824905ff483b6e38bd753b750f0884dc.png"},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var r=t(96540);const o={},s=r.createContext(o);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:n},e.children)}},37819:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/swagger2-f3ff9ccbaae2615eaf0b49d0c9bd4db9.png"},53171:e=>{e.exports=JSON.parse('{"permalink":"/blog/2021/03/02/whats-new-in-version-2-part-2","editUrl":"https://github.com/FoalTS/foal/edit/master/docs/blog/2021-03-02-whats-new-in-version-2-part-2.md","source":"@site/blog/2021-03-02-whats-new-in-version-2-part-2.md","title":"What\'s new in version 2 (part 2/4)","description":"Banner","date":"2021-03-02T00:00:00.000Z","tags":[{"inline":true,"label":"release","permalink":"/blog/tags/release"}],"readingTime":5.055,"hasTruncateMarker":true,"authors":[{"name":"Lo\xefc Poullain","title":"Creator of FoalTS. Software engineer.","url":"https://loicpoullain.com","socials":{"x":"https://x.com/Loic_Poullain","linkedin":"https://www.linkedin.com/in/loicpoullain/","github":"https://github.com/LoicPoullain","bluesky":"https://bsky.app/profile/loicpoullain.com"},"imageURL":"https://avatars1.githubusercontent.com/u/13604533?v=4","key":"LoicPoullain","page":null}],"frontMatter":{"title":"What\'s new in version 2 (part 2/4)","authors":"LoicPoullain","image":"blog/twitter-banners/whats-new-in-version-2-part-2.png","tags":["release"]},"unlisted":false,"prevItem":{"title":"What\'s new in version 2 (part 3/4)","permalink":"/blog/2021/03/11/whats-new-in-version-2-part-3"},"nextItem":{"title":"Version 2.2 release notes","permalink":"/blog/2021/02/25/version-2.2-release-notes"}}')},65537:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(96540),o=t(34164),s=t(65627),a=t(56347),i=t(50372),l=t(30604),c=t(11861),d=t(78749);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:o}}=e;return{value:n,label:t,attributes:r,default:o}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const o=(0,a.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(o.location.search);n.set(s,e),o.replace({...o.location,search:n.toString()})}),[s,o])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,s=h(e),[a,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[c,u]=m({queryString:t,groupId:o}),[f,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[o,s]=(0,d.Dv)(t);return[o,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:o}),v=(()=>{const e=c??f;return p({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{v&&l(v)}),[v]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),g(e)}),[u,g,s]),tabValues:s}}var g=t(9136);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(74848);function j(e){let{className:n,block:t,selectedValue:r,selectValue:a,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),o=i[t].value;o!==r&&(c(n),a(o))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{l.push(e)},onKeyDown:u,onClick:d,...s,className:(0,o.A)("tabs__item",v.tabItem,s?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function b(e){let{lazy:n,children:t,selectedValue:s}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=f(e);return(0,x.jsxs)("div",{className:(0,o.A)("tabs-container",v.tabList),children:[(0,x.jsx)(j,{...n,...e}),(0,x.jsx)(b,{...n,...e})]})}function w(e){const n=(0,g.A)();return(0,x.jsx)(y,{...e,children:u(e.children)},String(n))}},79329:(e,n,t)=>{t.d(n,{A:()=>a});t(96540);var r=t(34164);const o={tabItem:"tabItem_Ymn6"};var s=t(74848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,a),hidden:t,children:n})}}}]);