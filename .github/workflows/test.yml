name: Test

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10, 12, 14]

    env:
      SETTINGS_AWS_ACCESS_KEY_ID: ${{ secrets.SETTINGS_AWS_ACCESS_KEY_ID }}
      SETTINGS_AWS_SECRET_ACCESS_KEY: ${{ secrets.SETTINGS_AWS_SECRET_ACCESS_KEY }}
      NODE_VERSION: ${{ matrix.node-version }}

    services:
      mysql:
        image: mysql:5.7.10
        ports:
          # Another version of MySQL is installed on the vm and already uses the port 3306.
          - 3308:3306
        env:
          MYSQL_ROOT_PASSWORD: admin
          MYSQL_USER: test
          MYSQL_PASSWORD: test
          MYSQL_DATABASE: test

      mariadb:
        image: mariadb:10.3.22
        ports:
          - 3307:3306
        env:
          MYSQL_ROOT_PASSWORD: admin
          MYSQL_USER: test
          MYSQL_PASSWORD: test
          MYSQL_DATABASE: test

      postgres:
        image: postgres:9.6.1
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test

      mongodb:
        image: mongo:3.4.1
        ports:
          - 27017:27017

      redis:
        image: redis:4.0.14
        ports:
          - 6380:6379

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install global dependencies (lerna, pm2, codecov)
      run: npm install -g lerna@3.20 pm2 codecov
    - name: Install project dependencies
      run: npm install
    - name: Install package dependencies and build packages
      run: lerna bootstrap
    - name: Create CLI symlink in the global folder
      run: npm link
      working-directory: packages/cli
    - name: Check package linting
      run: npm run lint
    - name: Run unit tests of @foal/acceptance-tests
      run: cd packages/acceptance-tests && npm run test
    - name: Run unit tests of @foal/aws-s3
      run: cd packages/aws-s3 && npm run test
    - name: Run unit tests of @foal/cli
      run: cd packages/cli && npm run test
    - name: Run unit tests of @foal/examples
      run: cd packages/examples && npm run test
    - name: Run unit tests of @foal/graphiql
      run: cd packages/graphiql && npm run test
    - name: Run unit tests of @foal/graphql
      run: cd packages/graphql && npm run test
    - name: Run unit tests of @foal/jwks-rsa
      run: cd packages/jwks-rsa && npm run test
    - name: Run unit tests of @foal/jwt
      run: cd packages/jwt && npm run test
    - name: Run unit tests of @foal/mongodb
      run: cd packages/mongodb && npm run test
    - name: Run unit tests of @foal/password
      run: cd packages/password && npm run test
    - name: Run unit tests of @foal/redis
      run: cd packages/redis && npm run test
    - name: Run unit tests of @foal/social
      run: cd packages/social && npm run test
    - name: Run unit tests of @foal/socket.io
      run: cd packages/socket.io && npm run test
    - name: Run unit tests of @foal/storage
      run: cd packages/storage && npm run test
    - name: Run unit tests of @foal/swagger
      run: cd packages/swagger && npm run test
    - name: Run unit tests of @foal/typeorm
      run: cd packages/typeorm && npm run test
    - name: Run unit tests of @foal/typestack
      run: cd packages/typestack && npm run test
    - name: Run unit tests of @foal/core
      run: cd packages/core && npm run test
    - name: Run acceptance tests (Bash)
      run: ./e2e_test.sh
    - name: Send code coverage report to Codecov
      uses: codecov/codecov-action@v1.0.3
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file: packages/core/coverage/*.json
