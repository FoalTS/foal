"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5747],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},43095:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={title:"Base de Donn\xe9es (configuration)",id:"tuto-2-database-set-up",slug:"2-database-set-up"},i=void 0,l={unversionedId:"tutorials/real-world-example-with-react/tuto-2-database-set-up",id:"version-2.x/tutorials/real-world-example-with-react/tuto-2-database-set-up",title:"Base de Donn\xe9es (configuration)",description:"La premi\xe8re \xe9tape de ce tutoriel consiste \xe0 \xe9tablir une connexion \xe0 la base de donn\xe9es. Si vous ne l'avez pas encore fait, installez MySQL ou PostgreSQL.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/version-2.x/tutorials/real-world-example-with-react/2-database-set-up.md",sourceDirName:"tutorials/real-world-example-with-react",slug:"/tutorials/real-world-example-with-react/2-database-set-up",permalink:"/fr/docs/2.x/tutorials/real-world-example-with-react/2-database-set-up",draft:!1,editUrl:"https://github.com/FoalTS/foal/edit/master/docs/versioned_docs/version-2.x/tutorials/real-world-example-with-react/2-database-set-up.md",tags:[],version:"2.x",sidebarPosition:2,frontMatter:{title:"Base de Donn\xe9es (configuration)",id:"tuto-2-database-set-up",slug:"2-database-set-up"},sidebar:"someSidebar",previous:{title:"Introduction",permalink:"/fr/docs/2.x/tutorials/real-world-example-with-react/1-introduction"},next:{title:"Les Mod\xe8les User et Story",permalink:"/fr/docs/2.x/tutorials/real-world-example-with-react/3-the-models"}},s={},p=[],u={toc:p};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"La premi\xe8re \xe9tape de ce tutoriel consiste \xe0 \xe9tablir une connexion \xe0 la base de donn\xe9es. Si vous ne l'avez pas encore fait, installez ",(0,r.kt)("a",{parentName:"p",href:"https://dev.mysql.com/downloads/"},"MySQL")," ou ",(0,r.kt)("a",{parentName:"p",href:"https://www.postgresql.org/download/"},"PostgreSQL"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("em",{parentName:"p"},"Par d\xe9faut, Foal utilise SQLite dans chaque nouvelle application, car il ne n\xe9cessite aucune installation. Si vous souhaitez continuer \xe0 l'utiliser dans le cadre de ce tutoriel, vous pouvez sauter cette section et passer \xe0 la page suivante"),". ")),(0,r.kt)("p",null,"Tout d'abord, installez le pilote MySQL (ou Postgres)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install mysql # or pg\n")),(0,r.kt)("p",null,"Ouvrez le fichier ",(0,r.kt)("inlineCode",{parentName:"p"},"config/default.json")," et mettez \xe0 jour la section ",(0,r.kt)("inlineCode",{parentName:"p"},"database")," comme suit. Si votre base de donn\xe9es est PostgreSQL, changez la valeur ",(0,r.kt)("inlineCode",{parentName:"p"},"type")," en ",(0,r.kt)("inlineCode",{parentName:"p"},"postgres"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "port": "env(PORT)",\n  "settings": {\n    ...\n  },\n  "database": {\n    "type": "mysql",\n    "host": "env(DB_HOST)",\n    "port": "env(DB_PORT)",\n    "username": "env(DB_USERNAME)",\n    "password": "env(DB_PASSWORD)",\n    "database": "env(DB_NAME)"\n  }\n}\n\n')),(0,r.kt)("p",null,"Ce fichier est le fichier de configuration principal de l'application et sert de base \xe0 l'environnement dans lequel l'application s'ex\xe9cute, quel qu'il soit."),(0,r.kt)("p",null,"La syntaxe ",(0,r.kt)("inlineCode",{parentName:"p"},"env(*)")," indique au syst\xe8me de configuration de lire la valeur de la variable d'environnement donn\xe9e. Si elle n'existe pas, Foal essaiera de la lire \xe0 partir d'un fichier ",(0,r.kt)("inlineCode",{parentName:"p"},".env"),"."),(0,r.kt)("p",null,"Cr\xe9ez un nouveau fichier ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," \xe0 la racine de ",(0,r.kt)("inlineCode",{parentName:"p"},"backend-app")," et fournissez les informations d'identification de la base de donn\xe9es."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},".env")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# Use the identification information of your database.\n# The values below are given as an example.\nDB_HOST="localhost"\n# Default port for PostgreSQL is 5432.\nDB_PORT="3306"\nDB_USERNAME="test"\nDB_PASSWORD="test"\nDB_NAME="test"\n')),(0,r.kt)("p",null,"Red\xe9marrez le serveur de d\xe9veloppement. L'application est maintenant connect\xe9e \xe0 votre base de donn\xe9es."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Vous auriez pu sp\xe9cifier toutes les options de connexion \xe0 la base de donn\xe9es directement dans le fichier ",(0,r.kt)("inlineCode",{parentName:"p"},"default.json")," mais cela est consid\xe9r\xe9 comme une mauvaise pratique."),(0,r.kt)("p",{parentName:"blockquote"},"Les fichiers de configuration sont g\xe9n\xe9ralement ",(0,r.kt)("em",{parentName:"p"},"committ\xe9s")," avec le contr\xf4le de version et il est recommand\xe9 de ne pas ",(0,r.kt)("em",{parentName:"p"},"committer")," des fichiers contenant des informations sensibles.")))}c.isMDXComponent=!0}}]);