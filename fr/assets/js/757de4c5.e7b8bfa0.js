"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[517],{37459:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var n=r(74848),s=r(28453);const o={title:"Authentification des Utilisateurs dans l'API",id:"tuto-9-authenticated-api",slug:"9-authenticated-api"},i=void 0,a={id:"tutorials/real-world-example-with-react/tuto-9-authenticated-api",title:"Authentification des Utilisateurs dans l'API",description:"Maintenant que le login est configur\xe9, vous pouvez ajouter deux nouvelles routes pour cr\xe9er et supprimer des posts. Leur acc\xe8s sera limit\xe9 aux utilisateurs authentifi\xe9s.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/version-2.x/tutorials/real-world-example-with-react/9-authenticated-api.md",sourceDirName:"tutorials/real-world-example-with-react",slug:"/tutorials/real-world-example-with-react/9-authenticated-api",permalink:"/fr/docs/2.x/tutorials/real-world-example-with-react/9-authenticated-api",draft:!1,unlisted:!1,editUrl:"https://github.com/FoalTS/foal/edit/master/docs/versioned_docs/version-2.x/tutorials/real-world-example-with-react/9-authenticated-api.md",tags:[],version:"2.x",sidebarPosition:9,frontMatter:{title:"Authentification des Utilisateurs dans l'API",id:"tuto-9-authenticated-api",slug:"9-authenticated-api"},sidebar:"someSidebar",previous:{title:"Connecter les Utilisateurs",permalink:"/fr/docs/2.x/tutorials/real-world-example-with-react/8-authentication"},next:{title:"Authentification des utilisateurs dans React",permalink:"/fr/docs/2.x/tutorials/real-world-example-with-react/10-auth-with-react"}},l={},d=[];function c(e){const t={a:"a",code:"code",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Maintenant que le login est configur\xe9, vous pouvez ajouter deux nouvelles routes pour cr\xe9er et supprimer des posts. Leur acc\xe8s sera limit\xe9 aux utilisateurs authentifi\xe9s."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Point de terminaison"}),(0,n.jsx)(t.th,{children:"M\xe9thode"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"/api/stories"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"POST"})}),(0,n.jsx)(t.td,{children:"Cr\xe9e un nouveau post."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"/api/stories/:storyId"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"DELETE"})}),(0,n.jsx)(t.td,{children:"Supprime un post."})]})]})]}),"\n",(0,n.jsxs)(t.p,{children:["Ouvrez le fichier ",(0,n.jsx)(t.code,{children:"stories.controller.ts"})," et ajoutez deux nouvelles m\xe9thodes au contr\xf4leur."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",children:"import { Context, Delete, Get, HttpResponseCreated, HttpResponseNoContent, HttpResponseNotFound, HttpResponseOK, Post, UserRequired, ValidateBody, ValidatePathParam, ValidateQueryParam } from '@foal/core';\nimport { Story, User } from '../../entities';\n\nexport class StoriesController {\n\n  // readStories...\n\n  @Post()\n  @ValidateBody({\n    type: 'object',\n    properties: {\n      title: { type: 'string', maxLength: 255 },\n      link: { type: 'string', maxLength: 255 },\n    },\n    required: [ 'title', 'link' ],\n    additionalProperties: false,\n  })\n  @UserRequired()\n  async createStory(ctx: Context) {\n    const story = new Story();\n    story.title = ctx.request.body.title;\n    story.link = ctx.request.body.link;\n    // Set the current user as the author of the story.\n    story.author = ctx.user;\n    await story.save();\n\n    return new HttpResponseCreated();\n  }\n\n  @Delete('/:storyId')\n  @ValidatePathParam('storyId', { type: 'number' })\n  @UserRequired()\n  async deleteStory(ctx: Context<User>, { storyId }: { storyId: number }) {\n    // Only retrieve stories whose author is the current user.\n    const story = await Story.findOne({ id: storyId, author: ctx.user });\n\n    if (!story) {\n      return new HttpResponseNotFound();\n    }\n\n    await story.remove();\n\n    return new HttpResponseNoContent();\n  }\n\n}\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Lors de l'envoi d'une requ\xeate \xe0 ces points de terminaison, le hook ",(0,n.jsx)(t.code,{children:"@UserRequired"})," retournera une erreur 401 si ",(0,n.jsx)(t.code,{children:"ctx.user"})," n'est pas d\xe9fini (c'est-\xe0-dire si l'utilisateur ne s'est pas connect\xe9 au pr\xe9alable). Mais s'il l'est, la m\xe9thode du contr\xf4leur sera ex\xe9cut\xe9e."]}),"\n",(0,n.jsxs)(t.p,{children:["Allez sur ",(0,n.jsx)(t.a,{href:"http://localhost:3001/swagger",children:"http://localhost:3001/swagger"})," et v\xe9rifiez que le contr\xf4leur fonctionne comme pr\xe9vu. Vous pouvez, par exemple, essayer de cr\xe9er un post sans \xeatre connect\xe9, puis vous connecter et r\xe9essayer."]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>a});var n=r(96540);const s={},o=n.createContext(s);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);