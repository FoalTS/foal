"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3533],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(r),m=n,f=c["".concat(s,".").concat(m)]||c[m]||d[m]||l;return r?a.createElement(f,i(i({ref:t},p),{},{components:r})):a.createElement(f,i({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var u=2;u<l;u++)i[u]=r[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},66891:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var a=r(87462),n=(r(67294),r(3905));const l={title:"T\xe9l\xe9chargement d'Images",id:"tuto-12-file-upload",slug:"12-file-upload"},i=void 0,o={unversionedId:"tutorials/real-world-example-with-react/tuto-12-file-upload",id:"tutorials/real-world-example-with-react/tuto-12-file-upload",title:"T\xe9l\xe9chargement d'Images",description:"L'\xe9tape suivante de ce tutoriel consiste \xe0 permettre aux utilisateurs de t\xe9l\xe9charger une photo de profil. Cette image sera affich\xe9e sur la page d'accueil en face de chaque post de chaque auteur.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/tutorials/real-world-example-with-react/12-file-upload.md",sourceDirName:"tutorials/real-world-example-with-react",slug:"/tutorials/real-world-example-with-react/12-file-upload",permalink:"/fr/docs/tutorials/real-world-example-with-react/12-file-upload",draft:!1,editUrl:"https://github.com/FoalTS/foal/edit/master/docs/docs/tutorials/real-world-example-with-react/12-file-upload.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{title:"T\xe9l\xe9chargement d'Images",id:"tuto-12-file-upload",slug:"12-file-upload"},sidebar:"someSidebar",previous:{title:"Ajout de la Page d'Inscription",permalink:"/fr/docs/tutorials/real-world-example-with-react/11-sign-up"},next:{title:"Protection CSRF",permalink:"/fr/docs/tutorials/real-world-example-with-react/13-csrf"}},s={},u=[{value:"C\xf4t\xe9 serveur",id:"c\xf4t\xe9-serveur",level:2},{value:"C\xf4t\xe9 client",id:"c\xf4t\xe9-client",level:2}],p={toc:u};function d(e){let{components:t,...l}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"L'\xe9tape suivante de ce tutoriel consiste \xe0 permettre aux utilisateurs de t\xe9l\xe9charger une photo de profil. Cette image sera affich\xe9e sur la page d'accueil en face de chaque post de chaque auteur."),(0,n.kt)("p",null,"Pour ce faire, vous utiliserez le syst\xe8me de stockage de Foal. Il vous permet de valider et d'enregistrer les fichiers t\xe9l\xe9charg\xe9s par le client. Ces fichiers peuvent \xeatre sauvegard\xe9s sur votre disque local ou dans le Cloud en utilisant AWS S3. Nous n'utiliserons pas la fonction \"cloud\" dans ce tutoriel, mais vous pouvez d\xe9couvrir comment la configurer ",(0,n.kt)("a",{parentName:"p",href:"/fr/docs/file-system/local-and-cloud-storage"},"ici"),"."),(0,n.kt)("h2",{id:"c\xf4t\xe9-serveur"},"C\xf4t\xe9 serveur"),(0,n.kt)("p",null,"Tout d'abord, installez le paquet."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @foal/storage\n")),(0,n.kt)("p",null,"Mettez \xe0 jour la configuration dans ",(0,n.kt)("inlineCode",{parentName:"p"},"config/default.json")," pour sp\xe9cifier l'emplacement des fichiers auxquels le gestionnaire de disque peut acc\xe9der."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "port": "env(PORT)",\n  "settings": {\n    ...\n    "disk": {\n      "local": {\n        "directory": "assets"\n      }\n    }\n  },\n  ...\n}\n')),(0,n.kt)("p",null,"Cr\xe9ez ensuite le r\xe9pertoire ",(0,n.kt)("inlineCode",{parentName:"p"},"assets/images/profiles/uploaded")," o\xf9 les images de profil seront t\xe9l\xe9charg\xe9es. T\xe9l\xe9chargez l'image de profil par d\xe9faut ",(0,n.kt)("a",{target:"_blank",href:r(88276).Z},"ici")," et placez-la dans le dossier ",(0,n.kt)("inlineCode",{parentName:"p"},"assets/images/profiles")," avec le nom ",(0,n.kt)("inlineCode",{parentName:"p"},"default.png"),"."),(0,n.kt)("p",null,"Vous \xeates pr\xeat \xe0 cr\xe9er le contr\xf4leur. G\xe9n\xe9rez-en un nouveau."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"foal generate controller api/profile --register\n")),(0,n.kt)("p",null,"Ouvrez le nouveau fichier ",(0,n.kt)("inlineCode",{parentName:"p"},"profile.controller.ts")," et ajoutez deux nouvelles routes."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Point de terminaison"),(0,n.kt)("th",{parentName:"tr",align:null},"M\xe9thode"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"/api/profile/avatar")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"GET")),(0,n.kt)("td",{parentName:"tr",align:null},"R\xe9cup\xe8re l'image de profil de l'utilisateur. Si le param\xe8tre de requ\xeate facultatif ",(0,n.kt)("inlineCode",{parentName:"td"},"userId")," est fourni, le serveur renvoie l'avatar de cet utilisateur. Sinon, il renvoie l'avatar de l'utilisateur actuel. Si aucun utilisateur n'est authentifi\xe9 ou s'il ou elle n'a pas d'image de profil, une image par d\xe9faut est renvoy\xe9e.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"/api/profile")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"POST")),(0,n.kt)("td",{parentName:"tr",align:null},"Met \xe0 jour le profil de l'utilisateur. Un champ ",(0,n.kt)("inlineCode",{parentName:"td"},"name")," et un fichier ",(0,n.kt)("inlineCode",{parentName:"td"},"avatar")," facultatif sont attendus.")))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Context, dependency, File, Get, HttpResponseNoContent, Post, UserRequired, ValidateQueryParam } from '@foal/core';\nimport { Disk, ParseAndValidateFiles } from '@foal/storage';\nimport { User } from '../../entities';\n\nexport class ProfileController {\n  @dependency\n  disk: Disk;\n\n  @Get('/avatar')\n  @ValidateQueryParam('userId', { type: 'number' }, { required: false })\n  async readProfileImage(ctx: Context<User|null>) {\n    let user = ctx.user;\n\n    const userId: number|undefined = ctx.request.query.userId;\n    if (userId !== undefined) {\n      user = await User.findOneBy({ id: userId })\n    }\n\n    if (!user || !user.avatar) {\n      return this.disk.createHttpResponse('images/profiles/default.png');\n    }\n\n    return this.disk.createHttpResponse(user.avatar);\n  }\n\n  @Post()\n  @UserRequired()\n  @ParseAndValidateFiles(\n    {\n      avatar: { required: false, saveTo: 'images/profiles/uploaded' }\n    },\n    {\n      type: 'object',\n      properties: {\n        name: { type: 'string', maxLength: 255 }\n      },\n      required: ['name']\n    }\n  )\n  async updateProfileImage(ctx: Context<User>) {\n    ctx.user.name = ctx.request.body.name;\n\n    // Warning: File must be imported from `@foal/core`.\n    const file: File|undefined = ctx.files.get('avatar')[0];\n    if (file) {\n      if (ctx.user.avatar) {\n        await this.disk.delete(ctx.user.avatar);\n      }\n      ctx.user.avatar = file.path;\n    }\n\n    await ctx.user.save();\n\n    return new HttpResponseNoContent();\n  }\n\n}\n\n")),(0,n.kt)("p",null,"Allez sur ",(0,n.kt)("a",{parentName:"p",href:"http://localhost:3001/swagger"},"http://localhost:3001/swagger")," et essayez de t\xe9l\xe9charger une photo de profil. Vous devez d'abord vous connecter."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Vous avez peut-\xeatre remarqu\xe9 le d\xe9corateur ",(0,n.kt)("inlineCode",{parentName:"p"},"@dependency")," pour d\xe9finir la propri\xe9t\xe9 ",(0,n.kt)("inlineCode",{parentName:"p"},"disk: Disk"),". Ce m\xe9canisme est appel\xe9 injection de d\xe9pendance et est particuli\xe8rement utile dans les tests unitaires. Vous pouvez en savoir plus \xe0 ce sujet ",(0,n.kt)("a",{parentName:"p",href:"/fr/docs/architecture/architecture-overview"},"ici"),".")),(0,n.kt)("h2",{id:"c\xf4t\xe9-client"},"C\xf4t\xe9 client"),(0,n.kt)("p",null,"Du c\xf4t\xe9 client, le t\xe9l\xe9chargement de l'image du profil est g\xe9r\xe9 dans les fichiers ",(0,n.kt)("inlineCode",{parentName:"p"},"ProfileHeader.tsx")," et ",(0,n.kt)("inlineCode",{parentName:"p"},"requests/profile.ts"),"."),(0,n.kt)("p",null,"Ouvrez ce dernier et impl\xe9mentez la fonction ",(0,n.kt)("inlineCode",{parentName:"p"},"updateProfile"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"import axios from 'axios';\n\nexport async function updateProfile(username: string, avatar: File|null): Promise<void> {\n  const formData = new FormData();\n  formData.set('name', username);\n  if (avatar) {\n    formData.set('avatar', avatar);\n  }\n\n  await axios.post('/api/profile', formData, {\n    headers: {\n    'content-type': 'multipart/form-data'\n    }\n  });\n}\n")),(0,n.kt)("p",null,"Maintenant, si vous retournez sur ",(0,n.kt)("a",{parentName:"p",href:"http://localhost:3000/profile"},"http://localhost:3000/profile"),", vous devriez pouvoir t\xe9l\xe9charger votre photo de profil."))}d.isMDXComponent=!0},88276:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/files/default-9490f4915bf9aca8c77fd98e411f2e2c.png"}}]);