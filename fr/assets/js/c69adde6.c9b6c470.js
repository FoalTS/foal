"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[78515],{28453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>c});var t=o(96540);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}},88875:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"frontend/not-found-page","title":"404 Page","description":"Here\'s a way to implement custom 404 pages.","source":"@site/i18n/fr/docusaurus-plugin-content-docs/version-3.x/frontend/not-found-page.md","sourceDirName":"frontend","slug":"/frontend/not-found-page","permalink":"/fr/docs/3.x/frontend/not-found-page","draft":false,"unlisted":false,"editUrl":"https://github.com/FoalTS/foal/edit/master/docs/versioned_docs/version-3.x/frontend/not-found-page.md","tags":[],"version":"3.x","frontMatter":{"title":"404 Page"},"sidebar":"someSidebar","previous":{"title":"Nuxt","permalink":"/fr/docs/3.x/frontend/nuxt.js"},"next":{"title":"Commandes","permalink":"/fr/docs/3.x/cli/commands"}}');var r=o(74848),s=o(28453);const a={title:"404 Page"},c=void 0,l={},d=[];function i(e){const n={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Here's a way to implement custom 404 pages."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Get, HttpResponseNotFound, HttpResponseOK } from '@foal/core';\n\nclass ViewController {\n  @Get('/home')\n  home() {\n    return new HttpResponseOK('You are on the home page!');\n  }\n}\n\nclass AppController {\n  subControllers = [ ViewController ];\n\n  @Get('*')\n  notFound() {\n    return new HttpResponseNotFound('The page you are looking for does not exist.');\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In case you want to intercept all HTTP verbs (POST, PUT, etc), you can also use the ",(0,r.jsx)(n.code,{children:"@All"})," decorator for this."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { All, HttpResponseNotFound } from '@foal/core';\n\nclass AppController {\n  subControllers = [ ViewController ];\n\n  @All('*')\n  notFound() {\n    return new HttpResponseNotFound('The route you are looking for does not exist.');\n  }\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}}}]);