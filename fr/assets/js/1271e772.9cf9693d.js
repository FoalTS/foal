"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2377],{34305:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var o=n(74848),s=n(28453);const i={title:"E2E Testing and Authentication",sidebar_label:"E2E Testing & Auth"},r=void 0,a={id:"tutorials/multi-user-todo-list/tuto-8-e2e-testing-and-authentication",title:"E2E Testing and Authentication",description:"The last part of this tutorial explains how to write and run end-to-end tests. The purpose of these tests is not to verify that each feature of each component works, but to check that these components work properly together.",source:"@site/versioned_docs/version-1.x/tutorials/multi-user-todo-list/tuto-8-e2e-testing-and-authentication.md",sourceDirName:"tutorials/multi-user-todo-list",slug:"/tutorials/multi-user-todo-list/tuto-8-e2e-testing-and-authentication",permalink:"/fr/docs/1.x/tutorials/multi-user-todo-list/tuto-8-e2e-testing-and-authentication",draft:!1,unlisted:!1,editUrl:"https://github.com/FoalTS/foal/edit/master/docs/versioned_docs/version-1.x/tutorials/multi-user-todo-list/tuto-8-e2e-testing-and-authentication.md",tags:[],version:"1.x",frontMatter:{title:"E2E Testing and Authentication",sidebar_label:"E2E Testing & Auth"},sidebar:"someSidebar",previous:{title:"The Sign Up Page",permalink:"/fr/docs/1.x/tutorials/multi-user-todo-list/tuto-7-the-signup-page"},next:{title:"Installation",permalink:"/fr/docs/1.x/tutorials/mongodb-todo-list/tuto-1-installation"}},c={},d=[];function h(e){const t={code:"code",em:"em",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["The last part of this tutorial explains how to write and run ",(0,o.jsx)(t.em,{children:"end-to-end"})," tests. The purpose of these tests is not to verify that each feature of each component works, but to check that these components work properly together."]}),"\n",(0,o.jsxs)(t.p,{children:["The tests are located in the ",(0,o.jsx)(t.code,{children:"src/e2e/"})," directory. The command to run them in development is ",(0,o.jsx)(t.code,{children:"npm run e2e"}),". E2E tests generally use the ",(0,o.jsx)(t.code,{children:"supertest"})," library which provides a high-level abstraction for testing HTTP."]}),"\n",(0,o.jsxs)(t.p,{children:["Open ",(0,o.jsx)(t.code,{children:"index.ts"})," in ",(0,o.jsx)(t.code,{children:"src/e2e"})," and replace its content."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"// std\n// The `assert` module provides a simple set of assertion tests.\nimport { ok } from 'assert';\n\n// 3p\nimport { createApp } from '@foal/core';\nimport * as request from 'supertest';\nimport { createConnection, getConnection } from 'typeorm';\n\n// App\nimport { AppController } from '../app/app.controller';\nimport { User } from '../app/entities';\n\n// Define a group of tests.\ndescribe('The server', () => {\n\n  let app: any;\n\n  // Create the application and the connection to the database before running all the tests.\n  before(async () => {\n    // The connection uses the configuration defined in the file config/e2e.json.\n    // By default, the file has three connection options:\n    //  \"database\": \"./e2e_db.sqlite3\" -> Use a different database for running the tests.\n    // \"synchronize\": true ->  Auto create the database schema when the connection is established.\n    // \"dropSchema\": true -> Drop the schema when the connection is established (empty the database).\n    await createConnection();\n    app = createApp(AppController);\n  });\n\n  // Close the database connection after running all the tests whether they succeed or failed.\n  after(() => getConnection().close());\n\n  // Define a nested group of tests.\n  describe('on GET /api/todos requests', () => {\n\n    it('should return a 400 status if the user did not signed in.', () => {\n      return request(app)\n        .get('/api/todos')\n        .expect(400)\n        .expect({ code: 'invalid_request', description: 'Session cookie not found.' });\n    });\n\n    it('should return a 200 status if the user did signed in.', async () => {\n      // Create a new user in the empty database.\n      const user = new User();\n      user.email = 'john@foalts.org';\n      await user.setPassword('john_password');\n      await getConnection().manager.save(user);\n\n      // Log the user in.\n      let cookie = '';\n      await request(app)\n        .post('/auth/login')\n        // Set the body of the request\n        .send({ email: 'john@foalts.org', password: 'john_password' })\n        // The response should have the status 302 (redirection)\n        .expect(302)\n        .then(data => {\n          // The response should set the authentication cookie for the next requests.\n          ok(Array.isArray(data.header['set-cookie']));\n          // Save the cookie to be able to use it in further requests.\n          cookie = data.header['set-cookie'][0];\n        });\n\n      // Test the /api/todos endpoint when the user has logged in.\n      return request(app)\n        .get('/api/todos')\n        // Send the authentication cookie.\n        .set('Cookie', cookie)\n        .expect(200);\n    });\n\n  });\n\n});\n\n"})}),"\n",(0,o.jsx)(t.p,{children:"Now run the tests."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"npm run e2e\n"})}),"\n",(0,o.jsx)(t.p,{children:"The output should look like this:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"E2E tests output",src:n(54501).A+"",width:"1296",height:"334"})}),"\n",(0,o.jsx)(t.p,{children:"Congratulations, you have reached the end of this tutorial!"})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},54501:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/e2e_output-9e64eb8bb5f440d42cd2716e4215dde4.png"},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(96540);const s={},i=o.createContext(s);function r(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);