"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[33149],{28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>i});var o=s(96540);const t={},r=o.createContext(t);function a(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(r.Provider,{value:n},e.children)}},88592:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"tutorials/real-world-example-with-react/tuto-8-authentication","title":"Conexi\xf3n de los Usuarios","description":"Los posts se muestran en la p\xe1gina de inicio. Si queremos que los usuarios puedan publicar nuevos posts y subir una foto de perfil, tenemos que permitirles iniciar sesi\xf3n en la aplicaci\xf3n.","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/tutorials/real-world-example-with-react/8-authentication.md","sourceDirName":"tutorials/real-world-example-with-react","slug":"/tutorials/real-world-example-with-react/8-authentication","permalink":"/es/docs/tutorials/real-world-example-with-react/8-authentication","draft":false,"unlisted":false,"editUrl":"https://github.com/FoalTS/foal/edit/master/docs/docs/tutorials/real-world-example-with-react/8-authentication.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"title":"Conexi\xf3n de los Usuarios","id":"tuto-8-authentication","slug":"8-authentication"},"sidebar":"someSidebar","previous":{"title":"La Aplicaci\xf3n Frontend","permalink":"/es/docs/tutorials/real-world-example-with-react/7-add-frontend"},"next":{"title":"Autenticaci\xf3n en la API","permalink":"/es/docs/tutorials/real-world-example-with-react/9-authenticated-api"}}');var t=s(74848),r=s(28453);const a={title:"Conexi\xf3n de los Usuarios",id:"tuto-8-authentication",slug:"8-authentication"},i=void 0,l={},c=[];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Los posts se muestran en la p\xe1gina de inicio. Si queremos que los usuarios puedan publicar nuevos posts y subir una foto de perfil, tenemos que permitirles iniciar sesi\xf3n en la aplicaci\xf3n."}),"\n",(0,t.jsx)(n.p,{children:"Para ello, utilizaremos las sesiones de Foal con cookies."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["FoalTS ofrece muchas opciones para autenticar a los usuarios. Por ejemplo, puede enviar tokens de sesi\xf3n con la cabecera ",(0,t.jsx)(n.code,{children:"Authorization"})," o utilizar tokens sin estado con JWT. No exploraremos todas estas posibilidades en este tutorial pero puede encontrar la documentaci\xf3n completa ",(0,t.jsx)(n.a,{href:"/es/docs/authentication/quick-start",children:"aqu\xed"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Abra el archivo ",(0,t.jsx)(n.code,{children:"api.controller.ts"})," y a\xf1ada el hook ",(0,t.jsx)(n.code,{children:"@UseSessions"})," en la parte superior de la clase."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { ApiInfo, ApiServer, controller, UseSessions } from '@foal/core';\nimport { User } from '../entities';\nimport { StoriesController } from './api';\n\n@ApiInfo({\n  title: 'Application API',\n  version: '1.0.0'\n})\n@ApiServer({\n  url: '/api'\n})\n@UseSessions({\n  cookie: true,\n  user: (id: number) => User.findOneBy({ id }),\n})\nexport class ApiController {\n\n  subControllers = [\n    controller('/stories', StoriesController),\n  ];\n\n}\n\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Cuando se utiliza con la opci\xf3n ",(0,t.jsx)(n.code,{children:"cookie"}),", este hook asegura que ",(0,t.jsx)(n.code,{children:"ctx.session"})," se defina siempre en cada m\xe9todo del controlador y sus subcontroladores. Este objeto puede ser utilizado para almacenar informaci\xf3n entre m\xfaltiples consultas, como un ID de usuario por ejemplo. Se utilizar\xe1 para autenticar a los usuarios."]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["En segundo plano, Foal genera un token de sesi\xf3n \xfanico para cada usuario que utiliza la API y lo almacena en una cookie en el host del cliente. Cuando el cliente realiza una nueva solicitud, el navegador env\xeda autom\xe1ticamente el token con la solicitud para que el servidor pueda recuperar la informaci\xf3n de la sesi\xf3n. Los datos de la sesi\xf3n se almacenan en la base de datos en la tabla ",(0,t.jsx)(n.em,{children:"sessions"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Pero no tiene que preocuparse por ello, todo es gestionado por Foal."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Cree un nuevo controlador."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"foal generate controller api/auth --register\n"})}),"\n",(0,t.jsx)(n.p,{children:"Abra el nuevo archivo creado y a\xf1ada dos rutas."}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Punto final"}),(0,t.jsx)(n.th,{children:"M\xe9todo"}),(0,t.jsx)(n.th,{children:"Descripci\xf3n"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"/api/auth/login"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"POST"})}),(0,t.jsx)(n.td,{children:"Inicia la sesi\xf3n del usuario. Se espera un correo electr\xf3nico y una contrase\xf1a en el cuerpo de la solicitud."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"/api/auth/logout"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"POST"})}),(0,t.jsx)(n.td,{children:"Cierra la sesi\xf3n del usuario."})]})]})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Context, hashPassword, HttpResponseNoContent, HttpResponseOK, HttpResponseUnauthorized, Post, ValidateBody, verifyPassword } from '@foal/core';\nimport { User } from '../../entities';\n\nconst credentialsSchema = {\n  type: 'object',\n  properties: {\n    email: { type: 'string', format: 'email', maxLength: 255 },\n    password: { type: 'string' }\n  },\n  required: [ 'email', 'password' ],\n  additionalProperties: false,\n};\n\nexport class AuthController {\n\n  @Post('/login')\n  @ValidateBody(credentialsSchema)\n  async login(ctx: Context<User|null>) {\n    const email = ctx.request.body.email;\n    const password = ctx.request.body.password;\n\n    const user = await User.findOneBy({ email });\n    if (!user) {\n      return new HttpResponseUnauthorized();\n    }\n\n    if (!(await verifyPassword(password, user.password))) {\n      return new HttpResponseUnauthorized();\n    }\n\n    ctx.session!.setUser(user);\n    ctx.user = user;\n\n    return new HttpResponseOK({\n      id: user.id,\n      name: user.name,\n    });\n  }\n\n  @Post('/logout')\n  async logout(ctx: Context) {\n    await ctx.session!.destroy();\n    return new HttpResponseNoContent();\n  }\n\n}\n\n"})}),"\n",(0,t.jsxs)(n.p,{children:["El m\xe9todo ",(0,t.jsx)(n.code,{children:"login"})," comprueba primero que el usuario existe y que las credenciales proporcionadas son correctas. Si es as\xed, asocia el usuario a la sesi\xf3n actual."]}),"\n",(0,t.jsxs)(n.p,{children:["En las siguientes consultas, el hook ",(0,t.jsx)(n.em,{children:"UseSessions"})," recuperar\xe1 el ID del usuario de la sesi\xf3n y establecer\xe1 la propiedad ",(0,t.jsx)(n.code,{children:"ctx.user"})," en consecuencia. Si el usuario no se ha conectado previamente, entonces ",(0,t.jsx)(n.code,{children:"ctx.user"})," ser\xe1 ",(0,t.jsx)(n.code,{children:"null"}),". Si lo ha hecho, entonces ",(0,t.jsx)(n.code,{children:"ctx.user"})," ser\xe1 una instancia de ",(0,t.jsx)(n.code,{children:"User"}),". Esto es posible gracias a la opci\xf3n ",(0,t.jsx)(n.code,{children:"user"})," que proporcionamos al hook anteriormente. Es la funci\xf3n que toma el ID de usuario como par\xe1metro y devuelve el valor a asignar a ",(0,t.jsx)(n.code,{children:"ctx.user"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);