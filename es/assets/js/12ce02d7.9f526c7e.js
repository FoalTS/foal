"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2735],{28453:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>l});var r=n(96540);const s={},t=r.createContext(s);function i(e){const a=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(t.Provider,{value:a},e.children)}},32558:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"tutorials/real-world-example-with-react/tuto-12-file-upload","title":"Carga y Descarga de Im\xe1genes","description":"El siguiente paso en este tutorial es permitir a los usuarios subir una imagen de perfil. Esta imagen se mostrar\xe1 en la p\xe1gina de inicio delante de cada publicaci\xf3n de cada autor.","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/tutorials/real-world-example-with-react/12-file-upload.md","sourceDirName":"tutorials/real-world-example-with-react","slug":"/tutorials/real-world-example-with-react/12-file-upload","permalink":"/es/docs/tutorials/real-world-example-with-react/12-file-upload","draft":false,"unlisted":false,"editUrl":"https://github.com/FoalTS/foal/edit/master/docs/docs/tutorials/real-world-example-with-react/12-file-upload.md","tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"title":"Carga y Descarga de Im\xe1genes","id":"tuto-12-file-upload","slug":"12-file-upload"},"sidebar":"someSidebar","previous":{"title":"A\xf1adida de la p\xe1gina de inscripci\xf3n","permalink":"/es/docs/tutorials/real-world-example-with-react/11-sign-up"},"next":{"title":"Protecci\xf3n contra CSRF","permalink":"/es/docs/tutorials/real-world-example-with-react/13-csrf"}}');var s=n(74848),t=n(28453);const i={title:"Carga y Descarga de Im\xe1genes",id:"tuto-12-file-upload",slug:"12-file-upload"},l=void 0,o={},d=[{value:"Lado del servidor",id:"lado-del-servidor",level:2},{value:"Lado del cliente",id:"lado-del-cliente",level:2}];function c(e){const a={a:"a",blockquote:"blockquote",code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.p,{children:"El siguiente paso en este tutorial es permitir a los usuarios subir una imagen de perfil. Esta imagen se mostrar\xe1 en la p\xe1gina de inicio delante de cada publicaci\xf3n de cada autor."}),"\n",(0,s.jsxs)(a.p,{children:["Para ello, utilizar\xe1 el sistema de almacenamiento de Foal. \xc9ste le permite validar y guardar los archivos subidos por el cliente. Estos archivos pueden guardarse en su unidad local o en la nube utilizando AWS S3. No utilizaremos la funci\xf3n de la nube en este tutorial, pero puede encontrar c\xf3mo configurarla ",(0,s.jsx)(a.a,{href:"/es/docs/common/file-storage/local-and-cloud-storage",children:"aqu\xed"}),"."]}),"\n",(0,s.jsx)(a.h2,{id:"lado-del-servidor",children:"Lado del servidor"}),"\n",(0,s.jsx)(a.p,{children:"Primero, instale el paquete."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"npm install @foal/storage\n"})}),"\n",(0,s.jsxs)(a.p,{children:["Actualice la configuraci\xf3n en ",(0,s.jsx)(a.code,{children:"config/default.json"})," para especificar la ubicaci\xf3n de los archivos a los que puede acceder el gestor de disco."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-json",children:'{\n  "port": "env(PORT)",\n  "settings": {\n    ...\n    "disk": {\n      "local": {\n        "directory": "assets"\n      }\n    }\n  },\n  ...\n}\n'})}),"\n",(0,s.jsxs)(a.p,{children:["A continuaci\xf3n, cree el directorio ",(0,s.jsx)(a.code,{children:"assets/images/profiles/uploaded"})," donde se cargar\xe1n las im\xe1genes de perfil. Descargue la imagen de perfil por defecto ",(0,s.jsx)(a.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(70044).A+"",children:"aqu\xed"})," y col\xf3quela en la carpeta ",(0,s.jsx)(a.code,{children:"assets/images/profiles"})," con el nombre ",(0,s.jsx)(a.code,{children:"default.png"}),"."]}),"\n",(0,s.jsx)(a.p,{children:"Ya est\xe1 listo para crear el controlador. Genere uno nuevo."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"foal generate controller api/profile --register\n"})}),"\n",(0,s.jsxs)(a.p,{children:["Abra el nuevo archivo ",(0,s.jsx)(a.code,{children:"profile.controller.ts"})," y a\xf1ada dos nuevas rutas."]}),"\n",(0,s.jsxs)(a.table,{children:[(0,s.jsx)(a.thead,{children:(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.th,{children:"Punto final"}),(0,s.jsx)(a.th,{children:"M\xe9todo"}),(0,s.jsx)(a.th,{children:"Descripci\xf3n"})]})}),(0,s.jsxs)(a.tbody,{children:[(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{children:(0,s.jsx)(a.code,{children:"/api/profile/avatar"})}),(0,s.jsx)(a.td,{children:(0,s.jsx)(a.code,{children:"GET"})}),(0,s.jsxs)(a.td,{children:["Recupera la imagen del perfil del usuario. Si se proporciona el par\xe1metro de consulta opcional ",(0,s.jsx)(a.code,{children:"userId"}),", el servidor devuelve el avatar de ese usuario. En caso contrario, devuelve el avatar del usuario actual. Si ning\xfan usuario est\xe1 autenticado o no tiene imagen de perfil, se devuelve una imagen por defecto."]})]}),(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{children:(0,s.jsx)(a.code,{children:"/api/profile"})}),(0,s.jsx)(a.td,{children:(0,s.jsx)(a.code,{children:"POST"})}),(0,s.jsxs)(a.td,{children:["Actualiza el perfil del usuario. Se espera un campo ",(0,s.jsx)(a.code,{children:"name"})," y un archivo opcional ",(0,s.jsx)(a.code,{children:"avatar"}),"."]})]})]})]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-typescript",children:"import { Context, dependency, File, Get, HttpResponseNoContent, Post, UserRequired, ValidateQueryParam } from '@foal/core';\nimport { Disk, ParseAndValidateFiles } from '@foal/storage';\nimport { User } from '../../entities';\n\nexport class ProfileController {\n  @dependency\n  disk: Disk;\n\n  @Get('/avatar')\n  @ValidateQueryParam('userId', { type: 'number' }, { required: false })\n  async readProfileImage(ctx: Context<User|null>) {\n    let user = ctx.user;\n\n    const userId: number|undefined = ctx.request.query.userId;\n    if (userId !== undefined) {\n      user = await User.findOneBy({ id: userId })\n    }\n\n    if (!user || !user.avatar) {\n      return this.disk.createHttpResponse('images/profiles/default.png');\n    }\n\n    return this.disk.createHttpResponse(user.avatar);\n  }\n\n  @Post()\n  @UserRequired()\n  @ParseAndValidateFiles(\n    {\n      avatar: { required: false, saveTo: 'images/profiles/uploaded' }\n    },\n    {\n      type: 'object',\n      properties: {\n        name: { type: 'string', maxLength: 255 }\n      },\n      required: ['name']\n    }\n  )\n  async updateProfileImage(ctx: Context<User>) {\n    ctx.user.name = ctx.request.body.name;\n\n    // Warning: File must be imported from `@foal/core`.\n    const file: File|undefined = ctx.files.get('avatar')[0];\n    if (file) {\n      if (ctx.user.avatar) {\n        await this.disk.delete(ctx.user.avatar);\n      }\n      ctx.user.avatar = file.path;\n    }\n\n    await ctx.user.save();\n\n    return new HttpResponseNoContent();\n  }\n\n}\n\n"})}),"\n",(0,s.jsxs)(a.p,{children:["Vaya a ",(0,s.jsx)(a.a,{href:"http://localhost:3001/swagger",children:"http://localhost:3001/swagger"})," e intente subir una foto de perfil. Primero debe iniciar la sesi\xf3n."]}),"\n",(0,s.jsxs)(a.blockquote,{children:["\n",(0,s.jsxs)(a.p,{children:["Puede que haya notado el decorador ",(0,s.jsx)(a.code,{children:"@dependency"})," para establecer la propiedad ",(0,s.jsx)(a.code,{children:"disk: Disk"}),". Este mecanismo se llama inyecci\xf3n de dependencia y es particularmente \xfatil en las pruebas unitarias. Puede leer m\xe1s sobre ello ",(0,s.jsx)(a.a,{href:"/es/docs/architecture/architecture-overview",children:"aqu\xed"})]}),"\n"]}),"\n",(0,s.jsx)(a.h2,{id:"lado-del-cliente",children:"Lado del cliente"}),"\n",(0,s.jsxs)(a.p,{children:["En el lado del cliente, la descarga de la imagen del perfil se gestiona en los archivos ",(0,s.jsx)(a.code,{children:"ProfileHeader.tsx"})," y ",(0,s.jsx)(a.code,{children:"requests/profile.ts"}),"."]}),"\n",(0,s.jsxs)(a.p,{children:["Abra este \xfaltimo e implemente la funci\xf3n ",(0,s.jsx)(a.code,{children:"updateProfile"}),"."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-typescript",children:"import axios from 'axios';\n\nexport async function updateProfile(username: string, avatar: File|null): Promise<void> {\n  const formData = new FormData();\n  formData.set('name', username);\n  if (avatar) {\n    formData.set('avatar', avatar);\n  }\n\n  await axios.post('/api/profile', formData, {\n    headers: {\n    'content-type': 'multipart/form-data'\n    }\n  });\n}\n"})}),"\n",(0,s.jsxs)(a.p,{children:["Ahora, si vuelve a ",(0,s.jsx)(a.a,{href:"http://localhost:3000/profile",children:"http://localhost:3000/profile"}),", deber\xeda poder subir su foto de perfil."]})]})}function u(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},70044:(e,a,n)=>{n.d(a,{A:()=>r});const r=n.p+"assets/files/default-9490f4915bf9aca8c77fd98e411f2e2c.png"}}]);