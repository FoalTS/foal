"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4317],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>u});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var d=r.createContext({}),s=function(e){var t=r.useContext(d),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},c=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(o),u=n,f=m["".concat(d,".").concat(u)]||m[u]||p[u]||a;return o?r.createElement(f,l(l({ref:t},c),{},{components:o})):r.createElement(f,l({ref:t},c))}));function u(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,l=new Array(a);l[0]=m;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var s=2;s<a;s++)l[s]=o[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},5202:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var r=o(7462),n=(o(7294),o(3905));const a={title:"The Todo Model"},l=void 0,i={unversionedId:"tutorials/mongodb-todo-list/tuto-3-the-todo-model",id:"version-1.x/tutorials/mongodb-todo-list/tuto-3-the-todo-model",title:"The Todo Model",description:"Let's create your first model. The CLI provides a useful command to generate a new file with an empty model.",source:"@site/versioned_docs/version-1.x/tutorials/mongodb-todo-list/tuto-3-the-todo-model.md",sourceDirName:"tutorials/mongodb-todo-list",slug:"/tutorials/mongodb-todo-list/tuto-3-the-todo-model",permalink:"/es/docs/1.x/tutorials/mongodb-todo-list/tuto-3-the-todo-model",draft:!1,editUrl:"https://github.com/FoalTS/foal/edit/master/docs/versioned_docs/version-1.x/tutorials/mongodb-todo-list/tuto-3-the-todo-model.md",tags:[],version:"1.x",frontMatter:{title:"The Todo Model"},sidebar:"someSidebar",previous:{title:"Introduction",permalink:"/es/docs/1.x/tutorials/mongodb-todo-list/tuto-2-introduction"},next:{title:"The Shell Script create-todo",permalink:"/es/docs/1.x/tutorials/mongodb-todo-list/tuto-4-the-shell-script-create-todo"}},d={},s=[],c={toc:s};function p(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Let's create your first model. The CLI provides a useful command to generate a new file with an empty model."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"foal generate model todo\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"FoalTS uses ",(0,n.kt)("a",{parentName:"p",href:"http://mongoosejs.com"},"Mongoose"),", a complete ",(0,n.kt)("em",{parentName:"p"},"Object-Document Mapper"),", to communicate with the MongoDB database.")),(0,n.kt)("p",null,"Open the file ",(0,n.kt)("inlineCode",{parentName:"p"},"todo.model.ts")," in the ",(0,n.kt)("inlineCode",{parentName:"p"},"src/app/models")," directory and add a ",(0,n.kt)("inlineCode",{parentName:"p"},"text")," field."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"import { model, models, Schema } from 'mongoose';\n\nconst todoSchema = new Schema({\n  text: {\n    required: true,\n    type: String // String with a capital letter\n  }\n});\n\nexport const Todo = models.Todo || model('Todo', todoSchema);\n\n")))}p.isMDXComponent=!0}}]);