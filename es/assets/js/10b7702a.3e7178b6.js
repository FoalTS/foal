"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1463],{48841:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var o=n(74848),i=n(28453);const r={title:"Service and Application Initialization"},c=void 0,s={id:"upgrade-to-v2/service-and-app-initialization",title:"Service and Application Initialization",description:"FoalTS offers two ways to initialize the application: by the boot methods of the services or with the AppController.init method.",source:"@site/i18n/es/docusaurus-plugin-content-docs/version-2.x/upgrade-to-v2/service-and-app-initialization.md",sourceDirName:"upgrade-to-v2",slug:"/upgrade-to-v2/service-and-app-initialization",permalink:"/es/docs/2.x/upgrade-to-v2/service-and-app-initialization",draft:!1,unlisted:!1,editUrl:"https://github.com/FoalTS/foal/edit/master/docs/versioned_docs/version-2.x/upgrade-to-v2/service-and-app-initialization.md",tags:[],version:"2.x",frontMatter:{title:"Service and Application Initialization"}},a={},l=[{value:"New features",id:"new-features",level:2},{value:"The <code>IAppController</code> interface",id:"the-iappcontroller-interface",level:3}];function d(e){const t={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",p:"p",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["FoalTS offers two ways to initialize the application: by the ",(0,o.jsx)(t.code,{children:"boot"})," methods of the services or with the ",(0,o.jsx)(t.code,{children:"AppController.init"})," method."]}),"\n",(0,o.jsxs)(t.p,{children:["Previously we had to call ",(0,o.jsx)(t.code,{children:"ServicesManager.boot"})," and use the ",(0,o.jsx)(t.code,{children:"createAndInitApp"})," function. This is no longer necessary. FoalTS will call the ",(0,o.jsx)(t.code,{children:"boot"})," and ",(0,o.jsx)(t.code,{children:"init"})," methods if they exist when the application is launched. Therefore, the ",(0,o.jsx)(t.code,{children:"createAndInitApp"})," function no longer exists (use ",(0,o.jsx)(t.code,{children:"createApp"})," instead)."]}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:["Note that the ",(0,o.jsx)(t.code,{children:"boot"})," methods are called before ",(0,o.jsx)(t.code,{children:"AppController.init"}),"."]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"new-features",children:"New features"}),"\n",(0,o.jsxs)(t.h3,{id:"the-iappcontroller-interface",children:["The ",(0,o.jsx)(t.code,{children:"IAppController"})," interface"]}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"AppController"})," can implement the ",(0,o.jsx)(t.code,{children:"IAppController"})," interface. In this way, we make sure that the optional methods ",(0,o.jsx)(t.code,{children:"init"})," and ",(0,o.jsx)(t.code,{children:"handleError"})," are correctly implemented as well as the ",(0,o.jsx)(t.code,{children:"subControllers"})," property."]})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>s});var o=n(96540);const i={},r=o.createContext(i);function c(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);