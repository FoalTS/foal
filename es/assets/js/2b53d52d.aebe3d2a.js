"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4584],{16207:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var n=o(74848),s=o(28453);const a={title:"El Script Shell create-todo",id:"tuto-4-the-shell-script-create-todo",slug:"4-the-shell-script-create-todo"},r=void 0,i={id:"tutorials/simple-todo-list/tuto-4-the-shell-script-create-todo",title:"El Script Shell create-todo",description:"Ahora es el momento de poblar la base de datos con algunas tareas.",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/tutorials/simple-todo-list/4-the-shell-script-create-todo.md",sourceDirName:"tutorials/simple-todo-list",slug:"/tutorials/simple-todo-list/4-the-shell-script-create-todo",permalink:"/es/docs/tutorials/simple-todo-list/4-the-shell-script-create-todo",draft:!1,unlisted:!1,editUrl:"https://github.com/FoalTS/foal/edit/master/docs/docs/tutorials/simple-todo-list/4-the-shell-script-create-todo.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"El Script Shell create-todo",id:"tuto-4-the-shell-script-create-todo",slug:"4-the-shell-script-create-todo"},sidebar:"someSidebar",previous:{title:"El Modelo Todo",permalink:"/es/docs/tutorials/simple-todo-list/3-the-todo-model"},next:{title:"La API REST",permalink:"/es/docs/tutorials/simple-todo-list/5-the-rest-api"}},c={},l=[];function d(e){const t={blockquote:"blockquote",code:"code",em:"em",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Ahora es el momento de poblar la base de datos con algunas tareas."}),"\n",(0,n.jsxs)(t.p,{children:["Podr\xeda ejecutar la interfaz de l\xednea de comandos de su base de datos (en este caso ",(0,n.jsx)(t.em,{children:"SQLite"}),") e introducir algunas consultas SQL. Pero esto es arriesgado y poco pr\xe1ctico. Se vuelve especialmente cierto cuando la complejidad de sus modelos aumenta (relaciones many-to-many, etc)."]}),"\n",(0,n.jsxs)(t.p,{children:["Por eso va a crear y utilizar en su lugar un ",(0,n.jsx)(t.em,{children:"script shell"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sh",children:"foal generate script create-todo\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Un ",(0,n.jsx)(t.em,{children:"script shell"})," es una pieza de c\xf3digo destinada a ser llamada desde la l\xednea de comandos. Tiene acceso a todos los componentes de su aplicaci\xf3n, incluyendo sus modelos. Un script shell se divide en dos partes:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["un objeto ",(0,n.jsx)(t.code,{children:"schema"})," que define la especificaci\xf3n de los argumentos de la l\xednea de comandos,"]}),"\n",(0,n.jsxs)(t.li,{children:["y una funci\xf3n ",(0,n.jsx)(t.code,{children:"main"})," que obtiene estos argumentos como un objeto y ejecuta alg\xfan c\xf3digo."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["Abra el nuevo archivo generado en el directorio ",(0,n.jsx)(t.code,{children:"src/scripts"})," y actualice su contenido."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",children:"// App\nimport { Todo } from '../app/entities';\nimport { dataSource } from '../db';\n\nexport const schema = {\n  properties: {\n    text: { type: 'string' }\n  },\n  required: [ 'text' ],\n  type: 'object',\n};\n\nexport async function main(args: { text: string }) {\n  // Connect to the database.\n  await dataSource.initialize();\n\n  try {\n    // Create a new task with the text given in the command line.\n    const todo = new Todo();\n    todo.text = args.text;\n\n    // Save the task in the database and then display it in the console.\n    console.log(await todo.save());\n  } catch (error: any) {\n    console.log(error.message);\n  } finally {\n    // Close the connection to the database.\n    await dataSource.destroy();\n  }\n}\n\n"})}),"\n",(0,n.jsx)(t.p,{children:"Construya el script."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sh",children:"npm run build\n"})}),"\n",(0,n.jsx)(t.p,{children:"A continuaci\xf3n, ejecute el script para crear tareas en la base de datos."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sh",children:'foal run create-todo text="Read the docs"\nfoal run create-todo text="Create my first application"\nfoal run create-todo text="Write tests"\n'})}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsx)(t.p,{children:"Observe que si intenta crear una nueva tarea sin especificar el argumento del texto, obtendr\xe1 el siguiente error."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"Script error: arguments must have required property 'text'."})}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>i});var n=o(96540);const s={},a=n.createContext(s);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);